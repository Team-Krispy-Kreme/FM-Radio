

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Jan 28 16:16:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	smallconst
    29  000300                     __psmallconst:
    30                           	opt stack 0
    31  000300                     _regDflt:
    32                           	opt stack 0
    33  000300  FFFF               	dw	65535
    34  000302  5B15               	dw	23317
    35  000304  D0B9               	dw	53433
    36  000306  A010               	dw	40976
    37  000308  0780               	dw	1920
    38  00030A  28AB               	dw	10411
    39  00030C  6400               	dw	25600
    40  00030E  1EE7               	dw	7911
    41  000310  7141               	dw	28993
    42  000312  007D               	dw	125
    43  000314  82C6               	dw	33478
    44  000316  4F55               	dw	20309
    45  000318  970C               	dw	38668
    46  00031A  B845               	dw	47173
    47  00031C  FC2D               	dw	64557
    48  00031E  8097               	dw	32919
    49  000320  04A1               	dw	1185
    50  000322  DF6A               	dw	57194
    51  000324                     __end_of_regDflt:
    52                           	opt stack 0
    53  0000                     _ADCON1	set	4033
    54  0000                     _INTCONbits	set	4082
    55  0000                     _LCDCON	set	3929
    56  0000                     _LCDPS	set	3928
    57  0000                     _LCDSE0	set	3930
    58  0000                     _LCDSE1	set	3931
    59  0000                     _LCDSE2	set	3932
    60  0000                     _LCDSE3	set	3933
    61  0000                     _OSCCON	set	4051
    62  0000                     _PIR1bits	set	3998
    63  0000                     _PORTA	set	3968
    64  0000                     _PORTB	set	3969
    65  0000                     _PORTC	set	3970
    66  0000                     _SSPADD	set	4040
    67  0000                     _SSPBUF	set	4041
    68  0000                     _SSPCON1	set	4038
    69  0000                     _SSPCON1bits	set	4038
    70  0000                     _SSPCON2	set	4037
    71  0000                     _SSPCON2bits	set	4037
    72  0000                     _SSPSTAT	set	4039
    73  0000                     _SSPSTATbits	set	4039
    74  0000                     _T0CON	set	4053
    75  0000                     _T0CONbits	set	4053
    76  0000                     _TMR0H	set	4055
    77  0000                     _TMR0L	set	4054
    78  0000                     _TRISA	set	3986
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISCbits	set	3988
    82  0000                     _TRISG	set	3992
    83  0000                     _LCDDATA0	set	3936
    84                           
    85                           ; #config settings
    86  000324  00                 	db	0	; dummy byte at the end
    87  0000                     
    88                           	psect	cinit
    89  000758                     __pcinit:
    90                           	opt stack 0
    91  000758                     start_initialization:
    92                           	opt stack 0
    93  000758                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Clear objects allocated to COMRAM (36 bytes)
    97  000758  EE00  F001         	lfsr	0,__pbssCOMRAM
    98  00075C  0E24               	movlw	36
    99  00075E                     clear_0:
   100  00075E  6AEE               	clrf	postinc0,c
   101  000760  06E8               	decf	wreg,f,c
   102  000762  E1FD               	bnz	clear_0
   103  000764                     end_of_initialization:
   104                           	opt stack 0
   105  000764                     __end_of__initialization:
   106                           	opt stack 0
   107  000764  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  000766  6EF8               	movwf	tblptru,c
   109  000768  0100               	movlb	0
   110  00076A  EFED  F002         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           postinc0	equ	0xFEE
   113                           wreg	equ	0xFE8
   114                           
   115                           	psect	bssCOMRAM
   116  000001                     __pbssCOMRAM:
   117                           	opt stack 0
   118  000001                     _regImg:
   119                           	opt stack 0
   120  000001                     	ds	36
   121                           tblptru	equ	0xFF8
   122                           postinc0	equ	0xFEE
   123                           wreg	equ	0xFE8
   124                           
   125                           	psect	cstackCOMRAM
   126  000025                     __pcstackCOMRAM:
   127                           	opt stack 0
   128  000025                     ?_OpenI2C:
   129                           	opt stack 0
   130  000025                     ?_dly:
   131                           	opt stack 0
   132  000025                     ?_WriteI2C:
   133                           	opt stack 0
   134  000025                     ?_butnEvent:
   135                           	opt stack 0
   136  000025                     ?_nextChan:
   137                           	opt stack 0
   138  000025                     OpenI2C@sync_mode:
   139                           	opt stack 0
   140  000025                     WriteI2C@data_out:
   141                           	opt stack 0
   142  000025                     dly@d:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000025                     	ds	1
   147  000026                     ?_FMwrite:
   148                           	opt stack 0
   149  000026                     ?_FMread:
   150                           	opt stack 0
   151  000026                     FMwrite@adr:
   152                           	opt stack 0
   153  000026                     FMread@regAddr:
   154                           	opt stack 0
   155  000026                     OpenI2C@slew:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x1
   159  000026                     	ds	1
   160  000027                     ??_Init:
   161  000027                     ??_FMwrite:
   162  000027                     dly@i:
   163                           	opt stack 0
   164  000027                     FMread@data:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x2
   168  000027                     	ds	2
   169  000029                     ??_FMread:
   170  000029                     FMwrite@firstByt:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x4
   174  000029                     	ds	1
   175  00002A                     FMwrite@secndByt:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x5
   179  00002A                     	ds	5
   180  00002F                     FMread@firstByt:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0xA
   184  00002F                     	ds	1
   185  000030                     FMread@secndByt:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0xB
   189  000030                     	ds	1
   190  000031                     ?_FMready:
   191                           	opt stack 0
   192  000031                     ?_FMvers:
   193                           	opt stack 0
   194  000031                     FMready@rdy:
   195                           	opt stack 0
   196  000031                     FMvers@vsn:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xC
   200  000031                     	ds	2
   201  000033                     ??_FMready:
   202  000033                     ??_FMvers:
   203                           
   204                           ; 0 bytes @ 0xE
   205  000033                     	ds	2
   206  000035                     FMready@sts:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x10
   210  000035                     	ds	2
   211  000037                     ??_FMinit:
   212                           
   213                           ; 0 bytes @ 0x12
   214  000037                     	ds	2
   215  000039                     FMinit@dat:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x14
   219  000039                     	ds	2
   220  00003B                     FMinit@ad:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x16
   224  00003B                     	ds	1
   225  00003C                     ??_main:
   226                           
   227                           ; 0 bytes @ 0x17
   228  00003C                     	ds	1
   229  00003D                     main@evt:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x18
   233  00003D                     	ds	1
   234  00003E                     main@btn:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x19
   238  00003E                     	ds	1
   239  00003F                     main@ui:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x1A
   243  00003F                     	ds	2
   244                           tblptru	equ	0xFF8
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 464 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  ui              2   26[COMRAM] unsigned int 
   258 ;;  btn             1   25[COMRAM] unsigned char 
   259 ;;  evt             1   24[COMRAM] unsigned char 
   260 ;; Return value:  Size  Location     Type
   261 ;;		None               void
   262 ;; Registers used:
   263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   269 ;;      Params:         0       0       0       0
   270 ;;      Locals:         4       0       0       0
   271 ;;      Temps:          1       0       0       0
   272 ;;      Totals:         5       0       0       0
   273 ;;Total ram usage:        5 bytes
   274 ;; Hardware stack levels required when called:    5
   275 ;; This function calls:
   276 ;;		_butnEvent
   277 ;;		_dly
   278 ;;		_Init
   279 ;;		_FMinit
   280 ;;		_FMvers
   281 ;;		_nextChan
   282 ;;		_errfm
   283 ;; This function is called by:
   284 ;;		Startup code after reset
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text0
   289  0005DA                     __ptext0:
   290                           	opt stack 0
   291  0005DA                     _main:
   292                           	opt stack 26
   293                           
   294                           ;main.c: 466: unsigned char btn;
   295                           ;main.c: 467: unsigned char evt;
   296                           ;main.c: 468: unsigned int ui;
   297                           ;main.c: 470: dly(20);
   298                           
   299                           ;incstack = 0
   300                           ;incstack = 0
   301  0005DA  0E00               	movlw	0
   302  0005DC  6E26               	movwf	?_dly+1,c
   303  0005DE  0E14               	movlw	20
   304  0005E0  6E25               	movwf	?_dly,c
   305  0005E2  EC77  F003         	call	_dly	;wreg free
   306                           
   307                           ;main.c: 471: Init();
   308  0005E6  ECB2  F002         	call	_Init	;wreg free
   309                           
   310                           ;main.c: 472: FMvers(&ui);
   311  0005EA  0E00               	movlw	high main@ui
   312  0005EC  6E32               	movwf	?_FMvers+1,c
   313  0005EE  0E3F               	movlw	low main@ui
   314  0005F0  6E31               	movwf	?_FMvers,c
   315  0005F2  ECB7  F003         	call	_FMvers	;wreg free
   316                           
   317                           ;main.c: 473: if (ui != 0x1010) errfm();
   318  0005F6  5040               	movf	main@ui+1,w,c
   319  0005F8  0A10               	xorlw	16
   320  0005FA  0E10               	movlw	16
   321  0005FC  B4D8               	btfsc	status,2,c
   322  0005FE  183F               	xorwf	main@ui,w,c
   323  000600  A4D8               	btfss	status,2,c
   324  000602  ECCA  F003         	call	_errfm	;wreg free
   325                           
   326                           ;main.c: 474: if (FMinit() != 0) errfm();
   327  000606  EC00  F002         	call	_FMinit	;wreg free
   328  00060A  0900               	iorlw	0
   329  00060C  A4D8               	btfss	status,2,c
   330  00060E  ECCA  F003         	call	_errfm	;wreg free
   331  000612                     l1136:
   332                           
   333                           ;main.c: 476: evt = butnEvent(&btn);
   334  000612  0E00               	movlw	high main@btn
   335  000614  6E26               	movwf	?_butnEvent+1,c
   336  000616  0E3E               	movlw	low main@btn
   337  000618  6E25               	movwf	?_butnEvent,c
   338  00061A  ECC8  F003         	call	_butnEvent	;wreg free
   339  00061E  6E3D               	movwf	main@evt,c
   340                           
   341                           ;main.c: 477: if (evt == 1) switch (btn) {
   342  000620  043D               	decf	main@evt,w,c
   343  000622  B4D8               	btfsc	status,2,c
   344  000624  D00B               	goto	l1148
   345  000626  D7F5               	goto	l1136
   346  000628                     l1142:
   347  000628  6E3C               	movwf	??_main& (0+255),c
   348  00062A  0E01               	movlw	1
   349  00062C  6E25               	movwf	?_nextChan,c
   350  00062E  503C               	movf	??_main& (0+255),w,c
   351  000630  ECCB  F003         	call	_nextChan	;wreg free
   352  000634  D7EE               	goto	l1136
   353  000636                     l1144:
   354  000636  ECCA  F003         	call	_errfm	;wreg free
   355  00063A  D7EB               	goto	l1136
   356  00063C                     l1148:
   357  00063C  503E               	movf	main@btn,w,c
   358                           
   359                           ; Switch size 1, requested type "space"
   360                           ; Number of cases is 2, Range of values is 1 to 128
   361                           ; switch strategies available:
   362                           ; Name         Instructions Cycles
   363                           ; simple_byte            7     4 (average)
   364                           ;	Chosen strategy is simple_byte
   365  00063E  0A01               	xorlw	1	; case 1
   366  000640  B4D8               	btfsc	status,2,c
   367  000642  D7F2               	goto	l1142
   368  000644  0A81               	xorlw	129	; case 128
   369  000646  B4D8               	btfsc	status,2,c
   370  000648  D7F6               	goto	l1144
   371  00064A  D7E3               	goto	l1136
   372  00064C                     __end_of_main:
   373                           	opt stack 0
   374                           tblptru	equ	0xFF8
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           status	equ	0xFD8
   378                           
   379 ;; *************** function _errfm *****************
   380 ;; Defined at:
   381 ;;		line 438 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;		None               void
   388 ;; Registers used:
   389 ;;		None
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   395 ;;      Params:         0       0       0       0
   396 ;;      Locals:         0       0       0       0
   397 ;;      Temps:          0       0       0       0
   398 ;;      Totals:         0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text1
   409  000794                     __ptext1:
   410                           	opt stack 0
   411  000794                     _errfm:
   412                           	opt stack 30
   413  000794                     l154:
   414  000794  D7FF               	goto	l154
   415  000796                     __end_of_errfm:
   416                           	opt stack 0
   417                           tblptru	equ	0xFF8
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           status	equ	0xFD8
   421                           
   422 ;; *************** function _nextChan *****************
   423 ;; Defined at:
   424 ;;		line 420 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  up              1    0[COMRAM] unsigned char 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      unsigned char 
   431 ;; Registers used:
   432 ;;		None
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   438 ;;      Params:         1       0       0       0
   439 ;;      Locals:         0       0       0       0
   440 ;;      Temps:          0       0       0       0
   441 ;;      Totals:         1       0       0       0
   442 ;;Total ram usage:        1 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text2
   452  000796                     __ptext2:
   453                           	opt stack 0
   454  000796                     _nextChan:
   455                           	opt stack 30
   456                           
   457                           ;main.c: 423: return 0;
   458                           ;	Return value of _nextChan is never used
   459                           
   460                           ;incstack = 0
   461                           ;incstack = 0
   462  000796  0012               	return	
   463  000798                     __end_of_nextChan:
   464                           	opt stack 0
   465                           tblptru	equ	0xFF8
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           status	equ	0xFD8
   469                           
   470 ;; *************** function _FMvers *****************
   471 ;; Defined at:
   472 ;;		line 383 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  vsn             2   12[COMRAM] PTR unsigned int 
   475 ;;		 -> main@ui(2), 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      unsigned char 
   480 ;; Registers used:
   481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   487 ;;      Params:         2       0       0       0
   488 ;;      Locals:         0       0       0       0
   489 ;;      Temps:          1       0       0       0
   490 ;;      Totals:         3       0       0       0
   491 ;;Total ram usage:        3 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_FMread
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text3
   502  00076E                     __ptext3:
   503                           	opt stack 0
   504  00076E                     _FMvers:
   505                           	opt stack 27
   506                           
   507                           ;main.c: 384: if (FMread(0x1C, vsn) != 0) return 1;
   508                           
   509                           ;incstack = 0
   510                           ;incstack = 0
   511  00076E  6E33               	movwf	??_FMvers& (0+255),c
   512  000770  0E1C               	movlw	28
   513  000772  6E26               	movwf	?_FMread,c
   514  000774  5033               	movf	??_FMvers& (0+255),w,c
   515  000776  C031  F027         	movff	FMvers@vsn,?_FMread+1
   516  00077A  C032  F028         	movff	FMvers@vsn+1,?_FMread+2
   517  00077E  EC93  F001         	call	_FMread	;wreg free
   518                           
   519                           ;main.c: 385: return 0;
   520                           ;	Return value of _FMvers is never used
   521                           
   522                           ;	Return value of _FMvers is never used
   523  000782  0012               	return	
   524  000784                     __end_of_FMvers:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           status	equ	0xFD8
   530                           
   531 ;; *************** function _FMinit *****************
   532 ;; Defined at:
   533 ;;		line 312 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  dat             2   20[COMRAM] unsigned int 
   538 ;;  ad              1   22[COMRAM] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      unsigned char 
   541 ;; Registers used:
   542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   548 ;;      Params:         0       0       0       0
   549 ;;      Locals:         3       0       0       0
   550 ;;      Temps:          2       0       0       0
   551 ;;      Totals:         5       0       0       0
   552 ;;Total ram usage:        5 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    4
   555 ;; This function calls:
   556 ;;		_dly
   557 ;;		_FMwrite
   558 ;;		_FMready
   559 ;;		_showFreq
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text4
   566  000400                     __ptext4:
   567                           	opt stack 0
   568  000400                     _FMinit:
   569                           	opt stack 26
   570                           
   571                           ;main.c: 314: unsigned char ad;
   572                           ;main.c: 315: unsigned int dat;
   573                           ;main.c: 318: for(ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
   574                           
   575                           ;incstack = 0
   576                           ;incstack = 0
   577  000400  6E37               	movwf	??_FMinit& (0+255),c
   578  000402  0E00               	movlw	0
   579  000404  6E3B               	movwf	FMinit@ad,c
   580  000406  5037               	movf	??_FMinit& (0+255),w,c
   581  000408  D01B               	goto	L1
   582  00040A                     l1072:
   583  00040A  503B               	movf	FMinit@ad,w,c
   584  00040C  0D02               	mullw	2
   585  00040E  0E00               	movlw	low _regDflt
   586  000410  24F3               	addwf	prodl,w,c
   587  000412  6EF6               	movwf	tblptrl,c
   588  000414  0E03               	movlw	high _regDflt
   589  000416  20F4               	addwfc	prodh,w,c
   590  000418  6EF7               	movwf	tblptrh,c
   591  00041A  0009               	tblrd		*+
   592  00041C  CFF5 F037          	movff	tablat,??_FMinit
   593  000420  0009               	tblrd		*+
   594  000422  CFF5 F038          	movff	tablat,??_FMinit+1
   595  000426  503B               	movf	FMinit@ad,w,c
   596  000428  0D02               	mullw	2
   597  00042A  0E01               	movlw	low _regImg
   598  00042C  24F3               	addwf	prodl,w,c
   599  00042E  6ED9               	movwf	fsr2l,c
   600  000430  0E00               	movlw	high _regImg
   601  000432  20F4               	addwfc	prodh,w,c
   602  000434  6EDA               	movwf	fsr2h,c
   603  000436  C037  FFDE         	movff	??_FMinit,postinc2
   604  00043A  C038  FFDD         	movff	??_FMinit+1,postdec2
   605  00043E  2A3B               	incf	FMinit@ad,f,c
   606  000440                     L1:
   607  000440  0E11               	movlw	17
   608  000442  643B               	cpfsgt	FMinit@ad,c
   609  000444  D7E2               	goto	l1072
   610                           
   611                           ;main.c: 320: dat = regImg[0];
   612  000446  C001  F039         	movff	_regImg,FMinit@dat
   613  00044A  C002  F03A         	movff	_regImg+1,FMinit@dat+1
   614                           
   615                           ;main.c: 321: regImg[0] &= ~1;
   616  00044E  9001               	bcf	_regImg,0,c
   617                           
   618                           ;main.c: 322: if (FMwrite(0) != 0) return 1;
   619  000450  6E37               	movwf	??_FMinit& (0+255),c
   620  000452  0E00               	movlw	0
   621  000454  6E26               	movwf	?_FMwrite,c
   622  000456  5037               	movf	??_FMinit& (0+255),w,c
   623  000458  EC6C  F002         	call	_FMwrite	;wreg free
   624  00045C  0900               	iorlw	0
   625  00045E  A4D8               	btfss	status,2,c
   626  000460  D01E               	goto	u440
   627                           
   628                           ;main.c: 323: for(ad = 1; ad < 18; ad++) {
   629  000462  6E37               	movwf	??_FMinit& (0+255),c
   630  000464  0E01               	movlw	1
   631  000466  6E3B               	movwf	FMinit@ad,c
   632  000468  5037               	movf	??_FMinit& (0+255),w,c
   633  00046A  D008               	goto	L2
   634  00046C                     l1092:
   635                           
   636                           ;main.c: 324: if (FMwrite(ad) != 0)return 1;
   637  00046C  C03B  F026         	movff	FMinit@ad,?_FMwrite
   638  000470  EC6C  F002         	call	_FMwrite	;wreg free
   639  000474  0900               	iorlw	0
   640  000476  A4D8               	btfss	status,2,c
   641  000478  D012               	goto	u440
   642  00047A  2A3B               	incf	FMinit@ad,f,c
   643  00047C                     L2:
   644  00047C  0E11               	movlw	17
   645  00047E  643B               	cpfsgt	FMinit@ad,c
   646  000480  D7F5               	goto	l1092
   647                           
   648                           ;main.c: 325: }
   649                           ;main.c: 327: regImg[0] = dat | 1;
   650  000482  0E01               	movlw	1
   651  000484  1039               	iorwf	FMinit@dat,w,c
   652  000486  6E01               	movwf	_regImg,c
   653  000488  503A               	movf	FMinit@dat+1,w,c
   654  00048A  6E02               	movwf	_regImg+1,c
   655                           
   656                           ;main.c: 328: if (FMwrite(0) != 0) return 1;
   657  00048C  6E37               	movwf	??_FMinit& (0+255),c
   658  00048E  0E00               	movlw	0
   659  000490  6E26               	movwf	?_FMwrite,c
   660  000492  5037               	movf	??_FMinit& (0+255),w,c
   661  000494  EC6C  F002         	call	_FMwrite	;wreg free
   662  000498  0900               	iorlw	0
   663  00049A  B4D8               	btfsc	status,2,c
   664  00049C  D002               	goto	l1110
   665  00049E                     u440:
   666  00049E  0E01               	movlw	1
   667  0004A0  D01A               	goto	l125
   668  0004A2                     l1110:
   669                           
   670                           ;main.c: 329: dly(20);
   671  0004A2  0E00               	movlw	0
   672  0004A4  6E26               	movwf	?_dly+1,c
   673  0004A6  0E14               	movlw	20
   674  0004A8  6E25               	movwf	?_dly,c
   675  0004AA  EC77  F003         	call	_dly	;wreg free
   676                           
   677                           ;main.c: 330: while (FMready(&dat), !dat) dly(2);
   678  0004AE  D006               	goto	l1114
   679  0004B0                     l1112:
   680  0004B0  0E00               	movlw	0
   681  0004B2  6E26               	movwf	?_dly+1,c
   682  0004B4  0E02               	movlw	2
   683  0004B6  6E25               	movwf	?_dly,c
   684  0004B8  EC77  F003         	call	_dly	;wreg free
   685  0004BC                     l1114:
   686  0004BC  0E00               	movlw	high FMinit@dat
   687  0004BE  6E32               	movwf	?_FMready+1,c
   688  0004C0  0E39               	movlw	low FMinit@dat
   689  0004C2  6E31               	movwf	?_FMready,c
   690  0004C4  EC51  F003         	call	_FMready	;wreg free
   691  0004C8  503A               	movf	FMinit@dat+1,w,c
   692  0004CA  1039               	iorwf	FMinit@dat,w,c
   693  0004CC  B4D8               	btfsc	status,2,c
   694  0004CE  D7F0               	goto	l1112
   695                           
   696                           ;main.c: 331: showFreq();
   697  0004D0  ECCC  F003         	call	_showFreq	;wreg free
   698                           
   699                           ;main.c: 332: return 0;
   700  0004D4  0E00               	movlw	0
   701  0004D6                     l125:
   702  0004D6  0012               	return	
   703  0004D8                     __end_of_FMinit:
   704                           	opt stack 0
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           prodh	equ	0xFF4
   710                           prodl	equ	0xFF3
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           postinc2	equ	0xFDE
   714                           postdec2	equ	0xFDD
   715                           fsr2h	equ	0xFDA
   716                           fsr2l	equ	0xFD9
   717                           status	equ	0xFD8
   718                           
   719 ;; *************** function _showFreq *****************
   720 ;; Defined at:
   721 ;;		line 454 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      unsigned char 
   728 ;; Registers used:
   729 ;;		None
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   735 ;;      Params:         0       0       0       0
   736 ;;      Locals:         0       0       0       0
   737 ;;      Temps:          0       0       0       0
   738 ;;      Totals:         0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_FMinit
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text5
   749  000798                     __ptext5:
   750                           	opt stack 0
   751  000798                     _showFreq:
   752                           	opt stack 29
   753                           
   754                           ;main.c: 456: ;
   755                           ;main.c: 457: return 0;
   756                           ;	Return value of _showFreq is never used
   757                           
   758                           ;incstack = 0
   759                           ;incstack = 0
   760  000798  0012               	return	
   761  00079A                     __end_of_showFreq:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           prodh	equ	0xFF4
   768                           prodl	equ	0xFF3
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           fsr2h	equ	0xFDA
   774                           fsr2l	equ	0xFD9
   775                           status	equ	0xFD8
   776                           
   777 ;; *************** function _FMready *****************
   778 ;; Defined at:
   779 ;;		line 291 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  rdy             2   12[COMRAM] PTR unsigned int 
   782 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  sts             2   16[COMRAM] unsigned int 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      unsigned char 
   787 ;; Registers used:
   788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   794 ;;      Params:         2       0       0       0
   795 ;;      Locals:         2       0       0       0
   796 ;;      Temps:          2       0       0       0
   797 ;;      Totals:         6       0       0       0
   798 ;;Total ram usage:        6 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    3
   801 ;; This function calls:
   802 ;;		_FMread
   803 ;; This function is called by:
   804 ;;		_FMinit
   805 ;;		_FMfrequenc
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text6
   810  0006A2                     __ptext6:
   811                           	opt stack 0
   812  0006A2                     _FMready:
   813                           	opt stack 26
   814                           
   815                           ;main.c: 293: unsigned int sts;
   816                           ;main.c: 295: if (FMread(0x13, &sts) != 0) return 1;
   817                           
   818                           ;incstack = 0
   819                           ;incstack = 0
   820  0006A2  6E33               	movwf	??_FMready& (0+255),c
   821  0006A4  0E13               	movlw	19
   822  0006A6  6E26               	movwf	?_FMread,c
   823  0006A8  5033               	movf	??_FMready& (0+255),w,c
   824  0006AA  0E00               	movlw	high FMready@sts
   825  0006AC  6E28               	movwf	?_FMread+2,c
   826  0006AE  0E35               	movlw	low FMready@sts
   827  0006B0  6E27               	movwf	?_FMread+1,c
   828  0006B2  EC93  F001         	call	_FMread	;wreg free
   829  0006B6  0900               	iorlw	0
   830  0006B8  B4D8               	btfsc	status,2,c
   831  0006BA  D002               	goto	l1054
   832  0006BC  0E01               	movlw	1
   833  0006BE  D016               	goto	l119
   834  0006C0                     l1054:
   835                           
   836                           ;main.c: 296: sts &= 0x0020;
   837  0006C0  0E20               	movlw	32
   838  0006C2  1635               	andwf	FMready@sts,f,c
   839  0006C4  0E00               	movlw	0
   840  0006C6  1636               	andwf	FMready@sts+1,f,c
   841                           
   842                           ;main.c: 297: *rdy = sts ? 1 : 0;
   843  0006C8  5036               	movf	FMready@sts+1,w,c
   844  0006CA  1035               	iorwf	FMready@sts,w,c
   845  0006CC  B4D8               	btfsc	status,2,c
   846  0006CE  D002               	goto	u370
   847  0006D0  0E01               	movlw	1
   848  0006D2  D001               	goto	u376
   849  0006D4                     u370:
   850  0006D4  0E00               	movlw	0
   851  0006D6                     u376:
   852  0006D6  6E33               	movwf	??_FMready& (0+255),c
   853  0006D8  6A34               	clrf	(??_FMready+1)& (0+255),c
   854  0006DA  C031  FFD9         	movff	FMready@rdy,fsr2l
   855  0006DE  C032  FFDA         	movff	FMready@rdy+1,fsr2h
   856  0006E2  C033  FFDE         	movff	??_FMready,postinc2
   857  0006E6  C034  FFDD         	movff	??_FMready+1,postdec2
   858                           
   859                           ;main.c: 298: return 0;
   860  0006EA  0E00               	movlw	0
   861  0006EC                     l119:
   862  0006EC  0012               	return	
   863  0006EE                     __end_of_FMready:
   864                           	opt stack 0
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           prodh	equ	0xFF4
   870                           prodl	equ	0xFF3
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postinc2	equ	0xFDE
   874                           postdec2	equ	0xFDD
   875                           fsr2h	equ	0xFDA
   876                           fsr2l	equ	0xFD9
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _FMread *****************
   880 ;; Defined at:
   881 ;;		line 241 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  regAddr         1    1[COMRAM] unsigned char 
   884 ;;  data            2    2[COMRAM] PTR unsigned int 
   885 ;;		 -> main@ui(2), FMready@sts(2), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  secndByt        1   11[COMRAM] unsigned char 
   888 ;;  firstByt        1   10[COMRAM] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      unsigned char 
   891 ;; Registers used:
   892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   898 ;;      Params:         3       0       0       0
   899 ;;      Locals:         2       0       0       0
   900 ;;      Temps:          6       0       0       0
   901 ;;      Totals:        11       0       0       0
   902 ;;Total ram usage:       11 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    2
   905 ;; This function calls:
   906 ;;		_IdleI2C
   907 ;;		_WriteI2C
   908 ;;		_ReadI2C
   909 ;; This function is called by:
   910 ;;		_FMready
   911 ;;		_FMvers
   912 ;;		_FMid
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text7
   917  000326                     __ptext7:
   918                           	opt stack 0
   919  000326                     _FMread:
   920                           	opt stack 27
   921                           
   922                           ;main.c: 243: unsigned char firstByt;
   923                           ;main.c: 244: unsigned char secndByt;
   924                           ;main.c: 246: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   925                           
   926                           ;incstack = 0
   927                           ;incstack = 0
   928  000326  80C5               	bsf	4037,0,c	;volatile
   929  000328                     l99:
   930  000328  B0C5               	btfsc	4037,0,c	;volatile
   931  00032A  D7FE               	goto	l99
   932                           
   933                           ;main.c: 247: IdleI2C();
   934  00032C  ECC2  F003         	call	_IdleI2C	;wreg free
   935                           
   936                           ;main.c: 250: if (WriteI2C(0x20)) return 1;
   937  000330  6E29               	movwf	??_FMread& (0+255),c
   938  000332  0E20               	movlw	32
   939  000334  6E25               	movwf	?_WriteI2C,c
   940  000336  5029               	movf	??_FMread& (0+255),w,c
   941  000338  EC26  F003         	call	_WriteI2C	;wreg free
   942  00033C  0900               	iorlw	0
   943  00033E  B4D8               	btfsc	status,2,c
   944  000340  D002               	goto	l1016
   945  000342  0E01               	movlw	1
   946  000344  D05C               	goto	l103
   947  000346                     l1016:
   948                           
   949                           ;main.c: 251: IdleI2C();
   950  000346  ECC2  F003         	call	_IdleI2C	;wreg free
   951                           
   952                           ;main.c: 252: WriteI2C(regAddr);
   953  00034A  C026  F025         	movff	FMread@regAddr,?_WriteI2C
   954  00034E  EC26  F003         	call	_WriteI2C	;wreg free
   955                           
   956                           ;main.c: 253: IdleI2C();
   957  000352  ECC2  F003         	call	_IdleI2C	;wreg free
   958                           
   959                           ;main.c: 254: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
   960  000356  82C5               	bsf	4037,1,c	;volatile
   961  000358                     l104:
   962  000358  B2C5               	btfsc	4037,1,c	;volatile
   963  00035A  D7FE               	goto	l104
   964                           
   965                           ;main.c: 255: IdleI2C();
   966  00035C  ECC2  F003         	call	_IdleI2C	;wreg free
   967                           
   968                           ;main.c: 256: WriteI2C(0x20 + 0x01);
   969  000360  6E29               	movwf	??_FMread& (0+255),c
   970  000362  0E21               	movlw	33
   971  000364  6E25               	movwf	?_WriteI2C,c
   972  000366  5029               	movf	??_FMread& (0+255),w,c
   973  000368  EC26  F003         	call	_WriteI2C	;wreg free
   974                           
   975                           ;main.c: 257: IdleI2C();
   976  00036C  ECC2  F003         	call	_IdleI2C	;wreg free
   977                           
   978                           ;main.c: 258: firstByt = ReadI2C();
   979  000370  EC90  F003         	call	_ReadI2C	;wreg free
   980  000374  6E2F               	movwf	FMread@firstByt,c
   981                           
   982                           ;main.c: 259: IdleI2C();
   983  000376  ECC2  F003         	call	_IdleI2C	;wreg free
   984                           
   985                           ;main.c: 260: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
   986  00037A  9AC5               	bcf	4037,5,c	;volatile
   987  00037C  88C5               	bsf	4037,4,c	;volatile
   988  00037E                     l107:
   989  00037E  B8C5               	btfsc	4037,4,c	;volatile
   990  000380  D7FE               	goto	l107
   991                           
   992                           ;main.c: 261: IdleI2C();
   993  000382  ECC2  F003         	call	_IdleI2C	;wreg free
   994                           
   995                           ;main.c: 262: secndByt = ReadI2C();
   996  000386  EC90  F003         	call	_ReadI2C	;wreg free
   997  00038A  6E30               	movwf	FMread@secndByt,c
   998                           
   999                           ;main.c: 263: IdleI2C();
  1000  00038C  ECC2  F003         	call	_IdleI2C	;wreg free
  1001                           
  1002                           ;main.c: 264: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1003  000390  8AC5               	bsf	4037,5,c	;volatile
  1004  000392  88C5               	bsf	4037,4,c	;volatile
  1005  000394                     l110:
  1006  000394  B8C5               	btfsc	4037,4,c	;volatile
  1007  000396  D7FE               	goto	l110
  1008                           
  1009                           ;main.c: 265: IdleI2C();
  1010  000398  ECC2  F003         	call	_IdleI2C	;wreg free
  1011                           
  1012                           ;main.c: 266: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1013  00039C  84C5               	bsf	4037,2,c	;volatile
  1014  00039E                     l113:
  1015  00039E  B4C5               	btfsc	4037,2,c	;volatile
  1016  0003A0  D7FE               	goto	l113
  1017                           
  1018                           ;main.c: 267: IdleI2C();
  1019  0003A2  ECC2  F003         	call	_IdleI2C	;wreg free
  1020                           
  1021                           ;main.c: 268: *data = firstByt;
  1022  0003A6  502F               	movf	FMread@firstByt,w,c
  1023  0003A8  6E29               	movwf	??_FMread& (0+255),c
  1024  0003AA  6A2A               	clrf	(??_FMread+1)& (0+255),c
  1025  0003AC  C027  FFD9         	movff	FMread@data,fsr2l
  1026  0003B0  C028  FFDA         	movff	FMread@data+1,fsr2h
  1027  0003B4  C029  FFDE         	movff	??_FMread,postinc2
  1028  0003B8  C02A  FFDD         	movff	??_FMread+1,postdec2
  1029                           
  1030                           ;main.c: 269: *data <<= 8;
  1031  0003BC  C027  FFD9         	movff	FMread@data,fsr2l
  1032  0003C0  C028  FFDA         	movff	FMread@data+1,fsr2h
  1033  0003C4  50DE               	movf	postinc2,w,c
  1034  0003C6  6EDD               	movwf	postdec2,c
  1035  0003C8  6ADF               	clrf	indf2,c
  1036                           
  1037                           ;main.c: 270: *data = *data | secndByt;
  1038  0003CA  C027  FFD9         	movff	FMread@data,fsr2l
  1039  0003CE  C028  FFDA         	movff	FMread@data+1,fsr2h
  1040  0003D2  CFDE F029          	movff	postinc2,??_FMread
  1041  0003D6  CFDD F02A          	movff	postdec2,??_FMread+1
  1042  0003DA  5030               	movf	FMread@secndByt,w,c
  1043  0003DC  6E2B               	movwf	(??_FMread+2)& (0+255),c
  1044  0003DE  6A2C               	clrf	(??_FMread+3)& (0+255),c
  1045  0003E0  5029               	movf	??_FMread,w,c
  1046  0003E2  102B               	iorwf	??_FMread+2,w,c
  1047  0003E4  6E2D               	movwf	(??_FMread+4)& (0+255),c
  1048  0003E6  502A               	movf	??_FMread+1,w,c
  1049  0003E8  102C               	iorwf	??_FMread+3,w,c
  1050  0003EA  6E2E               	movwf	(??_FMread+5)& (0+255),c
  1051  0003EC  C027  FFD9         	movff	FMread@data,fsr2l
  1052  0003F0  C028  FFDA         	movff	FMread@data+1,fsr2h
  1053  0003F4  C02D  FFDE         	movff	??_FMread+4,postinc2
  1054  0003F8  C02E  FFDD         	movff	??_FMread+5,postdec2
  1055                           
  1056                           ;main.c: 272: return 0;
  1057  0003FC  0E00               	movlw	0
  1058  0003FE                     l103:
  1059  0003FE  0012               	return	
  1060  000400                     __end_of_FMread:
  1061                           	opt stack 0
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           prodh	equ	0xFF4
  1067                           prodl	equ	0xFF3
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           indf2	equ	0xFDF
  1071                           postinc2	equ	0xFDE
  1072                           postdec2	equ	0xFDD
  1073                           fsr2h	equ	0xFDA
  1074                           fsr2l	equ	0xFD9
  1075                           status	equ	0xFD8
  1076                           
  1077 ;; *************** function _ReadI2C *****************
  1078 ;; Defined at:
  1079 ;;		line 12 in file "/Applications/s/microchip/xc8/v1.20/sources/pic18/plib/i2c/i2c_read.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      unsigned char 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1093 ;;      Params:         0       0       0       0
  1094 ;;      Locals:         0       0       0       0
  1095 ;;      Temps:          0       0       0       0
  1096 ;;      Totals:         0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_FMread
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text8
  1107  000720                     __ptext8:
  1108                           	opt stack 0
  1109  000720                     _ReadI2C:
  1110                           	opt stack 28
  1111                           
  1112                           ;incstack = 0
  1113                           ;incstack = 0
  1114  000720  50C6               	movf	4038,w,c	;volatile
  1115  000722  0B0F               	andlw	15
  1116  000724  0A08               	xorlw	8
  1117  000726  B4D8               	btfsc	status,2,c
  1118  000728  D004               	goto	l206
  1119  00072A  50C6               	movf	4038,w,c	;volatile
  1120  00072C  0B0F               	andlw	15
  1121  00072E  0A0B               	xorlw	11
  1122  000730  B4D8               	btfsc	status,2,c
  1123  000732                     l206:
  1124  000732  86C5               	bsf	4037,3,c	;volatile
  1125  000734                     l207:
  1126  000734  A0C7               	btfss	4039,0,c	;volatile
  1127  000736  D7FE               	goto	l207
  1128  000738  50C9               	movf	4041,w,c	;volatile
  1129  00073A  0012               	return	
  1130  00073C                     __end_of_ReadI2C:
  1131                           	opt stack 0
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           prodh	equ	0xFF4
  1137                           prodl	equ	0xFF3
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           indf2	equ	0xFDF
  1141                           postinc2	equ	0xFDE
  1142                           postdec2	equ	0xFDD
  1143                           fsr2h	equ	0xFDA
  1144                           fsr2l	equ	0xFD9
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _FMwrite *****************
  1148 ;; Defined at:
  1149 ;;		line 197 in file "main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  adr             1    1[COMRAM] unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  regstr          2    0        unsigned int 
  1154 ;;  secndByt        1    5[COMRAM] unsigned char 
  1155 ;;  firstByt        1    4[COMRAM] unsigned char 
  1156 ;;  rpy             1    0        unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      unsigned char 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1166 ;;      Params:         1       0       0       0
  1167 ;;      Locals:         2       0       0       0
  1168 ;;      Temps:          2       0       0       0
  1169 ;;      Totals:         5       0       0       0
  1170 ;;Total ram usage:        5 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    2
  1173 ;; This function calls:
  1174 ;;		_IdleI2C
  1175 ;;		_WriteI2C
  1176 ;; This function is called by:
  1177 ;;		_FMinit
  1178 ;;		_FMfrequenc
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text9
  1183  0004D8                     __ptext9:
  1184                           	opt stack 0
  1185  0004D8                     _FMwrite:
  1186                           	opt stack 27
  1187                           
  1188                           ;main.c: 199: unsigned int regstr;
  1189                           ;main.c: 200: unsigned char firstByt;
  1190                           ;main.c: 201: unsigned char secndByt;
  1191                           ;main.c: 202: unsigned char rpy;
  1192                           ;main.c: 204: firstByt = regImg[adr] >> 8;
  1193                           
  1194                           ;incstack = 0
  1195                           ;incstack = 0
  1196  0004D8  5026               	movf	FMwrite@adr,w,c
  1197  0004DA  0D02               	mullw	2
  1198  0004DC  0E01               	movlw	low _regImg
  1199  0004DE  24F3               	addwf	prodl,w,c
  1200  0004E0  6ED9               	movwf	fsr2l,c
  1201  0004E2  0E00               	movlw	high _regImg
  1202  0004E4  20F4               	addwfc	prodh,w,c
  1203  0004E6  6EDA               	movwf	fsr2h,c
  1204  0004E8  CFDE F027          	movff	postinc2,??_FMwrite
  1205  0004EC  CFDD F028          	movff	postdec2,??_FMwrite+1
  1206  0004F0  C028  F027         	movff	??_FMwrite+1,??_FMwrite
  1207  0004F4  6A28               	clrf	??_FMwrite+1,c
  1208  0004F6  5027               	movf	??_FMwrite,w,c
  1209  0004F8  6E29               	movwf	FMwrite@firstByt,c
  1210                           
  1211                           ;main.c: 205: secndByt = regImg[adr];
  1212  0004FA  5026               	movf	FMwrite@adr,w,c
  1213  0004FC  0D02               	mullw	2
  1214  0004FE  0E01               	movlw	low _regImg
  1215  000500  24F3               	addwf	prodl,w,c
  1216  000502  6ED9               	movwf	fsr2l,c
  1217  000504  0E00               	movlw	high _regImg
  1218  000506  20F4               	addwfc	prodh,w,c
  1219  000508  6EDA               	movwf	fsr2h,c
  1220  00050A  50DF               	movf	indf2,w,c
  1221  00050C  6E2A               	movwf	FMwrite@secndByt,c
  1222                           
  1223                           ;main.c: 207: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1224  00050E  80C5               	bsf	4037,0,c	;volatile
  1225  000510                     l89:
  1226  000510  B0C5               	btfsc	4037,0,c	;volatile
  1227  000512  D7FE               	goto	l89
  1228                           
  1229                           ;main.c: 208: IdleI2C();
  1230  000514  ECC2  F003         	call	_IdleI2C	;wreg free
  1231                           
  1232                           ;main.c: 211: if (WriteI2C(0x20)) return 1;
  1233  000518  6E27               	movwf	??_FMwrite& (0+255),c
  1234  00051A  0E20               	movlw	32
  1235  00051C  6E25               	movwf	?_WriteI2C,c
  1236  00051E  5027               	movf	??_FMwrite& (0+255),w,c
  1237  000520  EC26  F003         	call	_WriteI2C	;wreg free
  1238  000524  0900               	iorlw	0
  1239  000526  B4D8               	btfsc	status,2,c
  1240  000528  D002               	goto	l998
  1241  00052A  0E01               	movlw	1
  1242  00052C  D01A               	goto	l93
  1243  00052E                     l998:
  1244                           
  1245                           ;main.c: 212: IdleI2C();
  1246  00052E  ECC2  F003         	call	_IdleI2C	;wreg free
  1247                           
  1248                           ;main.c: 213: WriteI2C(adr);
  1249  000532  C026  F025         	movff	FMwrite@adr,?_WriteI2C
  1250  000536  EC26  F003         	call	_WriteI2C	;wreg free
  1251                           
  1252                           ;main.c: 214: IdleI2C();
  1253  00053A  ECC2  F003         	call	_IdleI2C	;wreg free
  1254                           
  1255                           ;main.c: 215: WriteI2C(firstByt);
  1256  00053E  C029  F025         	movff	FMwrite@firstByt,?_WriteI2C
  1257  000542  EC26  F003         	call	_WriteI2C	;wreg free
  1258                           
  1259                           ;main.c: 216: IdleI2C();
  1260  000546  ECC2  F003         	call	_IdleI2C	;wreg free
  1261                           
  1262                           ;main.c: 217: WriteI2C(secndByt);
  1263  00054A  C02A  F025         	movff	FMwrite@secndByt,?_WriteI2C
  1264  00054E  EC26  F003         	call	_WriteI2C	;wreg free
  1265                           
  1266                           ;main.c: 218: IdleI2C();
  1267  000552  ECC2  F003         	call	_IdleI2C	;wreg free
  1268                           
  1269                           ;main.c: 219: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1270  000556  84C5               	bsf	4037,2,c	;volatile
  1271  000558                     l94:
  1272  000558  B4C5               	btfsc	4037,2,c	;volatile
  1273  00055A  D7FE               	goto	l94
  1274                           
  1275                           ;main.c: 220: IdleI2C();
  1276  00055C  ECC2  F003         	call	_IdleI2C	;wreg free
  1277                           
  1278                           ;main.c: 221: return 0;
  1279  000560  0E00               	movlw	0
  1280  000562                     l93:
  1281  000562  0012               	return	
  1282  000564                     __end_of_FMwrite:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           indf2	equ	0xFDF
  1293                           postinc2	equ	0xFDE
  1294                           postdec2	equ	0xFDD
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _WriteI2C *****************
  1300 ;; Defined at:
  1301 ;;		line 13 in file "/Applications/s/microchip/xc8/v1.20/sources/pic18/plib/i2c/i2c_writ.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  data_out        1    0[COMRAM] unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      char 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1315 ;;      Params:         1       0       0       0
  1316 ;;      Locals:         0       0       0       0
  1317 ;;      Temps:          0       0       0       0
  1318 ;;      Totals:         1       0       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		_IdleI2C
  1324 ;; This function is called by:
  1325 ;;		_FMwrite
  1326 ;;		_FMread
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text10
  1331  00064C                     __ptext10:
  1332                           	opt stack 0
  1333  00064C                     _WriteI2C:
  1334                           	opt stack 27
  1335                           
  1336                           ;incstack = 0
  1337                           ;incstack = 0
  1338  00064C  C025  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1339  000650  AEC6               	btfss	4038,7,c	;volatile
  1340  000652  D002               	goto	l952
  1341  000654  0EFF               	movlw	255
  1342  000656  D024               	goto	l228
  1343  000658                     l952:
  1344  000658  50C6               	movf	4038,w,c	;volatile
  1345  00065A  0B0F               	andlw	15
  1346  00065C  0A08               	xorlw	8
  1347  00065E  B4D8               	btfsc	status,2,c
  1348  000660  D00C               	goto	l970
  1349  000662  50C6               	movf	4038,w,c	;volatile
  1350  000664  0B0F               	andlw	15
  1351  000666  0A0B               	xorlw	11
  1352  000668  B4D8               	btfsc	status,2,c
  1353  00066A  D007               	goto	l970
  1354  00066C  88C6               	bsf	4038,4,c	;volatile
  1355  00066E                     l231:
  1356  00066E  A69E               	btfss	3998,3,c	;volatile
  1357  000670  D7FE               	goto	l231
  1358  000672  A4C7               	btfss	4039,2,c	;volatile
  1359  000674  B0C7               	btfsc	4039,0,c	;volatile
  1360  000676  D013               	goto	l984
  1361  000678  D010               	goto	u260
  1362  00067A                     l970:
  1363  00067A  50C6               	movf	4038,w,c	;volatile
  1364  00067C  0B0F               	andlw	15
  1365  00067E  0A08               	xorlw	8
  1366  000680  B4D8               	btfsc	status,2,c
  1367  000682  D005               	goto	l240
  1368  000684  50C6               	movf	4038,w,c	;volatile
  1369  000686  0B0F               	andlw	15
  1370  000688  0A0B               	xorlw	11
  1371  00068A  A4D8               	btfss	status,2,c
  1372  00068C  D009               	goto	l228
  1373  00068E                     l240:
  1374  00068E  B0C7               	btfsc	4039,0,c	;volatile
  1375  000690  D7FE               	goto	l240
  1376  000692  ECC2  F003         	call	_IdleI2C	;wreg free
  1377  000696  ACC5               	btfss	4037,6,c	;volatile
  1378  000698  D002               	goto	l984
  1379  00069A                     u260:
  1380  00069A  0EFE               	movlw	254
  1381  00069C  D001               	goto	l228
  1382  00069E                     l984:
  1383  00069E  0E00               	movlw	0
  1384  0006A0                     l228:
  1385  0006A0  0012               	return	
  1386  0006A2                     __end_of_WriteI2C:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           prodh	equ	0xFF4
  1393                           prodl	equ	0xFF3
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           indf2	equ	0xFDF
  1397                           postinc2	equ	0xFDE
  1398                           postdec2	equ	0xFDD
  1399                           fsr2h	equ	0xFDA
  1400                           fsr2l	equ	0xFD9
  1401                           status	equ	0xFD8
  1402                           
  1403 ;; *************** function _IdleI2C *****************
  1404 ;; Defined at:
  1405 ;;		line 25 in file "/Applications/s/microchip/xc8/v1.20/sources/pic18/plib/i2c/i2c_idle.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;		None               void
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1419 ;;      Params:         0       0       0       0
  1420 ;;      Locals:         0       0       0       0
  1421 ;;      Temps:          0       0       0       0
  1422 ;;      Totals:         0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_FMwrite
  1429 ;;		_FMread
  1430 ;;		_WriteI2C
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text11
  1435  000784                     __ptext11:
  1436                           	opt stack 0
  1437  000784                     _IdleI2C:
  1438                           	opt stack 27
  1439  000784                     l884:
  1440  000784  50C5               	movf	4037,w,c	;volatile
  1441  000786  0B1F               	andlw	31
  1442  000788  B4D8               	btfsc	status,2,c
  1443  00078A  B4C7               	btfsc	4039,2,c	;volatile
  1444  00078C  D7FB               	goto	l884
  1445  00078E  0012               	return	
  1446  000790                     __end_of_IdleI2C:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           prodh	equ	0xFF4
  1453                           prodl	equ	0xFF3
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           indf2	equ	0xFDF
  1457                           postinc2	equ	0xFDE
  1458                           postdec2	equ	0xFDD
  1459                           fsr2h	equ	0xFDA
  1460                           fsr2l	equ	0xFD9
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function _dly *****************
  1464 ;; Defined at:
  1465 ;;		line 94 in file "main.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  d               2    0[COMRAM] int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  i               2    2[COMRAM] int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;		None               void
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1479 ;;      Params:         2       0       0       0
  1480 ;;      Locals:         2       0       0       0
  1481 ;;      Temps:          0       0       0       0
  1482 ;;      Totals:         4       0       0       0
  1483 ;;Total ram usage:        4 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_FMinit
  1489 ;;		_main
  1490 ;;		_FMfrequenc
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text12
  1495  0006EE                     __ptext12:
  1496                           	opt stack 0
  1497  0006EE                     _dly:
  1498                           	opt stack 29
  1499                           
  1500                           ;main.c: 96: int i = 0;
  1501                           
  1502                           ;incstack = 0
  1503                           ;incstack = 0
  1504  0006EE  0E00               	movlw	0
  1505  0006F0  6E28               	movwf	dly@i+1,c
  1506  0006F2  0E00               	movlw	0
  1507  0006F4  6E27               	movwf	dly@i,c
  1508                           
  1509                           ;main.c: 98: for ( ; d; --d)
  1510  0006F6  D00F               	goto	l842
  1511  0006F8                     l834:
  1512                           
  1513                           ;main.c: 99: for (i = 100; i; --i) ;
  1514  0006F8  0E00               	movlw	0
  1515  0006FA  6E28               	movwf	dly@i+1,c
  1516  0006FC  0E64               	movlw	100
  1517  0006FE  6E27               	movwf	dly@i,c
  1518  000700  D003               	goto	l838
  1519  000702                     l836:
  1520  000702  0627               	decf	dly@i,f,c
  1521  000704  A0D8               	btfss	status,0,c
  1522  000706  0628               	decf	dly@i+1,f,c
  1523  000708                     l838:
  1524  000708  5028               	movf	dly@i+1,w,c
  1525  00070A  1027               	iorwf	dly@i,w,c
  1526  00070C  A4D8               	btfss	status,2,c
  1527  00070E  D7F9               	goto	l836
  1528  000710  0625               	decf	dly@d,f,c
  1529  000712  A0D8               	btfss	status,0,c
  1530  000714  0626               	decf	dly@d+1,f,c
  1531  000716                     l842:
  1532  000716  5026               	movf	dly@d+1,w,c
  1533  000718  1025               	iorwf	dly@d,w,c
  1534  00071A  B4D8               	btfsc	status,2,c
  1535  00071C  0012               	return	
  1536  00071E  D7EC               	goto	l834
  1537  000720                     __end_of_dly:
  1538                           	opt stack 0
  1539                           tblptru	equ	0xFF8
  1540                           tblptrh	equ	0xFF7
  1541                           tblptrl	equ	0xFF6
  1542                           tablat	equ	0xFF5
  1543                           prodh	equ	0xFF4
  1544                           prodl	equ	0xFF3
  1545                           postinc0	equ	0xFEE
  1546                           wreg	equ	0xFE8
  1547                           indf2	equ	0xFDF
  1548                           postinc2	equ	0xFDE
  1549                           postdec2	equ	0xFDD
  1550                           fsr2h	equ	0xFDA
  1551                           fsr2l	equ	0xFD9
  1552                           status	equ	0xFD8
  1553                           
  1554 ;; *************** function _Init *****************
  1555 ;; Defined at:
  1556 ;;		line 125 in file "main.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  i               2    0        int 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;		None               void
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1570 ;;      Params:         0       0       0       0
  1571 ;;      Locals:         0       0       0       0
  1572 ;;      Temps:          2       0       0       0
  1573 ;;      Totals:         2       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    1
  1577 ;; This function calls:
  1578 ;;		_OpenI2C
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text13
  1585  000564                     __ptext13:
  1586                           	opt stack 0
  1587  000564                     _Init:
  1588                           	opt stack 29
  1589                           
  1590                           ;main.c: 127: int i;
  1591                           ;main.c: 129: OSCCON = 0b01110010;
  1592                           
  1593                           ;incstack = 0
  1594                           ;incstack = 0
  1595  000564  0E72               	movlw	114
  1596  000566  6ED3               	movwf	4051,c	;volatile
  1597                           
  1598                           ;main.c: 130: LCDSE0 = 0b11111111;
  1599  000568  010F               	movlb	15	; () banked
  1600  00056A  010F               	movlb	15	; () banked
  1601  00056C  695A               	setf	90,b	;volatile
  1602                           
  1603                           ; BSR set to: 15
  1604                           ;main.c: 131: LCDSE1 = 0b11111111;
  1605  00056E  010F               	movlb	15	; () banked
  1606  000570  010F               	movlb	15	; () banked
  1607  000572  695B               	setf	91,b	;volatile
  1608                           
  1609                           ; BSR set to: 15
  1610                           ;main.c: 132: LCDSE2 = 0b11111111;
  1611  000574  010F               	movlb	15	; () banked
  1612  000576  010F               	movlb	15	; () banked
  1613  000578  695C               	setf	92,b	;volatile
  1614                           
  1615                           ;main.c: 133: LCDSE3 = 0b00000000;
  1616  00057A  0E00               	movlw	0
  1617  00057C  010F               	movlb	15	; () banked
  1618  00057E  010F               	movlb	15	; () banked
  1619  000580  6F5D               	movwf	93,b	;volatile
  1620                           
  1621                           ;main.c: 134: LCDCON = 0b10001000;
  1622  000582  0E88               	movlw	136
  1623  000584  010F               	movlb	15	; () banked
  1624  000586  010F               	movlb	15	; () banked
  1625  000588  6F59               	movwf	89,b	;volatile
  1626                           
  1627                           ;main.c: 135: LCDPS = 0b00110110;
  1628  00058A  0E36               	movlw	54
  1629  00058C  010F               	movlb	15	; () banked
  1630  00058E  010F               	movlb	15	; () banked
  1631  000590  6F58               	movwf	88,b	;volatile
  1632                           
  1633                           ;main.c: 136: ADCON1 = 0b00111111;
  1634  000592  0E3F               	movlw	63
  1635  000594  6EC1               	movwf	4033,c	;volatile
  1636                           
  1637                           ;main.c: 137: TRISA = 0b00000011;
  1638  000596  0E03               	movlw	3
  1639  000598  6E92               	movwf	3986,c	;volatile
  1640                           
  1641                           ;main.c: 138: TRISB = 0b00100001;
  1642  00059A  0E21               	movlw	33
  1643  00059C  6E93               	movwf	3987,c	;volatile
  1644                           
  1645                           ;main.c: 139: TRISC = 0b00011000;
  1646  00059E  0E18               	movlw	24
  1647  0005A0  6E94               	movwf	3988,c	;volatile
  1648                           
  1649                           ; BSR set to: 15
  1650                           ;main.c: 140: TRISG = 0b11111111;
  1651  0005A2  6898               	setf	3992,c	;volatile
  1652                           
  1653                           ;main.c: 141: PORTA = 0;
  1654  0005A4  0E00               	movlw	0
  1655  0005A6  6E80               	movwf	3968,c	;volatile
  1656                           
  1657                           ;main.c: 142: PORTB = 0;
  1658  0005A8  0E00               	movlw	0
  1659  0005AA  6E81               	movwf	3969,c	;volatile
  1660                           
  1661                           ;main.c: 143: PORTC = 0;
  1662  0005AC  0E00               	movlw	0
  1663  0005AE  6E82               	movwf	3970,c	;volatile
  1664                           
  1665                           ; BSR set to: 15
  1666                           ;main.c: 144: INTCONbits.TMR0IF = 0;
  1667  0005B0  94F2               	bcf	intcon,2,c	;volatile
  1668                           
  1669                           ;main.c: 146: T0CON = 0b00001000;
  1670  0005B2  0E08               	movlw	8
  1671  0005B4  6ED5               	movwf	4053,c	;volatile
  1672                           
  1673                           ;main.c: 147: TMR0H = 0;
  1674  0005B6  0E00               	movlw	0
  1675  0005B8  6ED7               	movwf	4055,c	;volatile
  1676                           
  1677                           ;main.c: 148: TMR0L = 0;
  1678  0005BA  0E00               	movlw	0
  1679  0005BC  6ED6               	movwf	4054,c	;volatile
  1680                           
  1681                           ; BSR set to: 15
  1682                           ;main.c: 149: T0CONbits.TMR0ON = 1;
  1683  0005BE  8ED5               	bsf	4053,7,c	;volatile
  1684                           
  1685                           ; BSR set to: 15
  1686                           ;main.c: 150: OpenI2C( 0b00001000, 0b10000000);
  1687  0005C0  6E27               	movwf	??_Init& (0+255),c
  1688  0005C2  0E08               	movlw	8
  1689  0005C4  6E25               	movwf	?_OpenI2C,c
  1690  0005C6  5027               	movf	??_Init& (0+255),w,c
  1691  0005C8  6E28               	movwf	(??_Init+1)& (0+255),c
  1692  0005CA  0E80               	movlw	128
  1693  0005CC  6E26               	movwf	?_OpenI2C+1,c
  1694  0005CE  5028               	movf	(??_Init+1)& (0+255),w,c
  1695  0005D0  EC9E  F003         	call	_OpenI2C	;wreg free
  1696                           
  1697                           ;main.c: 151: SSPADD = 0x3F;
  1698  0005D4  0E3F               	movlw	63
  1699  0005D6  6EC8               	movwf	4040,c	;volatile
  1700  0005D8  0012               	return	
  1701  0005DA                     __end_of_Init:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           prodh	equ	0xFF4
  1708                           prodl	equ	0xFF3
  1709                           intcon	equ	0xFF2
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           indf2	equ	0xFDF
  1713                           postinc2	equ	0xFDE
  1714                           postdec2	equ	0xFDD
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           status	equ	0xFD8
  1718                           
  1719 ;; *************** function _OpenI2C *****************
  1720 ;; Defined at:
  1721 ;;		line 15 in file "/Applications/s/microchip/xc8/v1.20/sources/pic18/plib/i2c/i2c_open.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  sync_mode       1    0[COMRAM] unsigned char 
  1724 ;;  slew            1    1[COMRAM] unsigned char 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1736 ;;      Params:         2       0       0       0
  1737 ;;      Locals:         0       0       0       0
  1738 ;;      Temps:          0       0       0       0
  1739 ;;      Totals:         2       0       0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_Init
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text14
  1750  00073C                     __ptext14:
  1751                           	opt stack 0
  1752  00073C                     _OpenI2C:
  1753                           	opt stack 29
  1754                           
  1755                           ;incstack = 0
  1756                           ;incstack = 0
  1757  00073C  0E3F               	movlw	63
  1758  00073E  16C7               	andwf	4039,f,c	;volatile
  1759  000740  0E00               	movlw	0
  1760  000742  6EC6               	movwf	4038,c	;volatile
  1761  000744  0E00               	movlw	0
  1762  000746  6EC5               	movwf	4037,c	;volatile
  1763  000748  5025               	movf	OpenI2C@sync_mode,w,c
  1764  00074A  12C6               	iorwf	4038,f,c	;volatile
  1765  00074C  5026               	movf	OpenI2C@slew,w,c
  1766  00074E  12C7               	iorwf	4039,f,c	;volatile
  1767  000750  8694               	bsf	3988,3,c	;volatile
  1768  000752  8894               	bsf	3988,4,c	;volatile
  1769  000754  8AC6               	bsf	4038,5,c	;volatile
  1770  000756  0012               	return	
  1771  000758                     __end_of_OpenI2C:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           prodh	equ	0xFF4
  1778                           prodl	equ	0xFF3
  1779                           intcon	equ	0xFF2
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           indf2	equ	0xFDF
  1783                           postinc2	equ	0xFDE
  1784                           postdec2	equ	0xFDD
  1785                           fsr2h	equ	0xFDA
  1786                           fsr2l	equ	0xFD9
  1787                           status	equ	0xFD8
  1788                           
  1789 ;; *************** function _butnEvent *****************
  1790 ;; Defined at:
  1791 ;;		line 85 in file "main.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  butn            2    0[COMRAM] PTR unsigned char 
  1794 ;;		 -> main@btn(1), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      unsigned char 
  1799 ;; Registers used:
  1800 ;;		wreg
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1806 ;;      Params:         2       0       0       0
  1807 ;;      Locals:         0       0       0       0
  1808 ;;      Temps:          0       0       0       0
  1809 ;;      Totals:         2       0       0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text15
  1820  000790                     __ptext15:
  1821                           	opt stack 0
  1822  000790                     _butnEvent:
  1823                           	opt stack 30
  1824                           
  1825                           ;main.c: 87: ;
  1826                           ;main.c: 88: return 0;
  1827                           
  1828                           ;incstack = 0
  1829                           ;incstack = 0
  1830  000790  0E00               	movlw	0
  1831  000792  0012               	return	
  1832  000794                     __end_of_butnEvent:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           indf2	equ	0xFDF
  1844                           postinc2	equ	0xFDE
  1845                           postdec2	equ	0xFDD
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           prodh	equ	0xFF4
  1854                           prodl	equ	0xFF3
  1855                           intcon	equ	0xFF2
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           indf2	equ	0xFDF
  1859                           postinc2	equ	0xFDE
  1860                           postdec2	equ	0xFDD
  1861                           fsr2h	equ	0xFDA
  1862                           fsr2l	equ	0xFD9
  1863                           status	equ	0xFD8
  1864                           
  1865                           	psect	rparam
  1866  0000                     tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           indf2	equ	0xFDF
  1876                           postinc2	equ	0xFDE
  1877                           postdec2	equ	0xFDD
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    butnEvent@butn	PTR unsigned char  size(2) Largest target is 1
		 -> main@btn(COMRAM[1]), 

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FMinit
    _FMvers->_FMread
    _FMinit->_FMready
    _FMready->_FMread
    _FMread->_WriteI2C
    _FMwrite->_WriteI2C
    _Init->_OpenI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     705
                                             23 COMRAM     5     5      0
                          _butnEvent
                                _dly
                               _Init
                             _FMinit
                             _FMvers
                           _nextChan
                              _errfm
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nextChan                                             1     0      1       0
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               3     1      2     135
                                             12 COMRAM     3     1      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               5     5      0     435
                                             18 COMRAM     5     5      0
                                _dly
                            _FMwrite
                            _FMready
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FMready                                              6     4      2     165
                                             12 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (2) _FMread                                              11     8      3     120
                                              1 COMRAM    11     8      3
                            _IdleI2C
                           _WriteI2C
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FMwrite                                              8     7      1      90
                                              1 COMRAM     5     4      1
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     0      1      15
                                              0 COMRAM     1     0      1
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _dly                                                  4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Init                                                 4     4      0      30
                                              2 COMRAM     2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     0      2      30
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _butnEvent
   _dly
   _Init
     _OpenI2C
   _FMinit
     _dly
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _FMready
       _FMread
         _IdleI2C
         _WriteI2C
           _IdleI2C
         _ReadI2C
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _WriteI2C
         _IdleI2C
       _ReadI2C
   _nextChan
   _errfm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      40       1       67.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       5       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40       8        0.0%
DATA                 0      0      45      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Jan 28 16:16:05 2014

            __CFG_CP$OFF 000000              _SSPSTATbits 000FC7                       l93 0562  
                     l94 0558                       l89 0510                       l99 0328  
            __CFG_BORV$3 000000                      l110 0394                      l103 03FE  
                    l104 0358                      l113 039E                      l107 037E  
                    l125 04D6                      l206 0732                      l231 066E  
                    l207 0734                      l119 06EC                      l240 068E  
                    l154 0794                      l228 06A0                      l834 06F8  
                    l842 0716                      l836 0702                      l838 0708  
                    l952 0658                      l970 067A                      l884 0784  
                    l984 069E                      l998 052E                      u260 069A  
                    u440 049E                      u370 06D4                      u376 06D6  
                    _dly 06EE                      prod 000FF3                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     l1110 04A2                     l1016 0346  
                   l1112 04B0                     l1114 04BC                     l1054 06C0  
                   l1142 0628                     l1072 040A                     l1144 0636  
                   l1136 0612                     l1092 046C                     l1148 063C  
                   ?_dly 0025                     _Init 0564          __end_of_FMready 06EE  
                   _main 05DA                     dly@d 0025                     dly@i 0027  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
        __end_of_FMwrite 0564                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000          __end_of_IdleI2C 0790  
          __CFG_MCLRE$ON 000000          __end_of_ReadI2C 073C          __end_of_OpenI2C 0758  
                  ??_dly 0027                    ?_Init 0025                    ?_main 0025  
                  _T0CON 000FD5                    _LCDPS 000F58                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISG 000F98            __CFG_PWRT$OFF 000000  
         __CFG_FCMEN$OFF 000000          __end_of_regDflt 0324                    _errfm 0794  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __initialization 0758             __end_of_Init 05DA             __end_of_main 064C  
                 ??_Init 0027                   ??_main 003C            __activetblptr 000002  
                 _ADCON1 000FC1                ??_FMready 0033                   ?_errfm 0025  
       __end_of_WriteI2C 06A2                ??_FMwrite 0027                   _LCDCON 000F59  
                 _LCDSE0 000F5A                   _LCDSE1 000F5B                   _LCDSE2 000F5C  
                 _LCDSE3 000F5D              OpenI2C@slew 0026                ??_IdleI2C 0025  
                 _OSCCON 000FD3                   _FMinit 0400                   _FMread 0326  
                 _SSPADD 000FC8                   _SSPBUF 000FC9                   _FMvers 076E  
              ??_ReadI2C 0025                ??_OpenI2C 0027           __CFG_XINST$OFF 000000  
                 _regImg 0001                   clear_0 075E         __end_of_nextChan 0798  
                 main@ui 003F         __end_of_showFreq 079A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0764           __pcstackCOMRAM 0025  
          __end_of_errfm 0796          __CFG_OSC$INTIO7 000000                  ??_errfm 0025  
     __size_of_butnEvent 0004                  ?_FMinit 0025                  ?_FMread 0026  
                ?_FMvers 0031                ?_WriteI2C 0025                FMinit@dat 0039  
                _FMready 06A2                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7                  _FMwrite 04D8                  _IdleI2C 0784  
        __size_of_FMinit 00D8          __size_of_FMread 00DA                FMvers@vsn 0031  
                _ReadI2C 0720          __size_of_FMvers 0016                ?_nextChan 0025  
                _OpenI2C 073C                  __Hparam 0000                  __Lparam 0000  
              ?_showFreq 0025             __psmallconst 0300          __CFG_STVREN$OFF 000000  
                __pcinit 0758               ??_WriteI2C 0026        __end_of_butnEvent 0794  
                __ramtop 0300                  __ptext0 05DA                  __ptext1 0794  
                __ptext2 0796                  __ptext3 076E                  __ptext4 0400  
                __ptext5 0798                  __ptext6 06A2                  __ptext7 0326  
                __ptext8 0720                  __ptext9 04D8                _T0CONbits 000FD5  
                _regDflt 0300             __size_of_dly 0032                  main@btn 003E  
                main@evt 003D     end_of_initialization 0764            __Lmediumconst 0000  
             ??_nextChan 0026               ??_showFreq 0025                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISCbits 000F94  
          butnEvent@butn 0025           __end_of_FMinit 04D8           __end_of_FMread 0400  
         __end_of_FMvers 0784      start_initialization 0758              __end_of_dly 0720  
       WriteI2C@data_out 0025                 ??_FMinit 0037                 ??_FMread 0029  
               ??_FMvers 0033        __size_of_WriteI2C 0056              __pbssCOMRAM 0001  
               ?_FMready 0031                 ?_FMwrite 0026               nextChan@up 0025  
               ?_IdleI2C 0025                 ?_ReadI2C 0025                 ?_OpenI2C 0025  
      __size_of_nextChan 0002        __size_of_showFreq 0002                 FMinit@ad 003B  
            __smallconst 0300                _butnEvent 0790          FMwrite@firstByt 0029  
               _LCDDATA0 000F60          FMwrite@secndByt 002A           __size_of_errfm 0002  
         FMread@firstByt 002F               FMread@data 0027                 _PIR1bits 000F9E  
         FMread@secndByt 0030               FMready@rdy 0031               FMready@sts 0035  
             ?_butnEvent 0025         __size_of_FMready 004C         __size_of_FMwrite 008C  
       OpenI2C@sync_mode 0025         __size_of_IdleI2C 000C         __size_of_ReadI2C 001C  
               __Hrparam 0000         __size_of_OpenI2C 001C                 __Lrparam 0000  
             FMwrite@adr 0026                 _WriteI2C 064C                 __ptext10 064C  
               __ptext11 0784                 __ptext12 06EE                 __ptext13 0564  
               __ptext14 073C                 __ptext15 0790            __size_of_Init 0076  
          __size_of_main 0072                 _nextChan 0796            FMread@regAddr 0026  
               _showFreq 0798              ??_butnEvent 0027               _INTCONbits 000FF2  
            _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
