

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 13 14:05:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F6490
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F6490 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	smallconst
    64  000300                     __psmallconst:
    65                           	opt stack 0
    66  000300  00                 	db	0
    67  000301                     _regDflt:
    68                           	opt stack 0
    69  000301  FFFF               	dw	65535
    70  000303  5B15               	dw	23317
    71  000305  D0B9               	dw	53433
    72  000307  A010               	dw	40976
    73  000309  0780               	dw	1920
    74  00030B  28AB               	dw	10411
    75  00030D  6400               	dw	25600
    76  00030F  1EE7               	dw	7911
    77  000311  7141               	dw	28993
    78  000313  007D               	dw	125
    79  000315  82C6               	dw	33478
    80  000317  4F55               	dw	20309
    81  000319  970C               	dw	38668
    82  00031B  B845               	dw	47173
    83  00031D  FC2D               	dw	64557
    84  00031F  8097               	dw	32919
    85  000321  04A1               	dw	1185
    86  000323  DF6A               	dw	57194
    87  000325                     __end_of_regDflt:
    88                           	opt stack 0
    89  0000                     _LCDPS	set	3928
    90  0000                     _LCDCON	set	3929
    91  0000                     _LCDSE3	set	3933
    92  0000                     _LCDSE2	set	3932
    93  0000                     _LCDSE1	set	3931
    94  0000                     _LCDSE0	set	3930
    95  0000                     _PIR1bits	set	3998
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPBUF	set	4041
    98  0000                     _TRISCbits	set	3988
    99  0000                     _SSPCON1	set	4038
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _SSPSTATbits	set	4039
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPCON2bits	set	4037
   104  0000                     _SSPADD	set	4040
   105  0000                     _T0CONbits	set	4053
   106  0000                     _TMR0L	set	4054
   107  0000                     _TMR0H	set	4055
   108  0000                     _T0CON	set	4053
   109  0000                     _INTCONbits	set	4082
   110  0000                     _PORTC	set	3970
   111  0000                     _PORTB	set	3969
   112  0000                     _PORTA	set	3968
   113  0000                     _TRISG	set	3992
   114  0000                     _TRISC	set	3988
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISA	set	3986
   117  0000                     _ADCON1	set	4033
   118  0000                     _OSCCON	set	4051
   119  0000                     _LCDDATA0	set	3936
   120                           
   121                           ; #config settings
   122  000325  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           	psect	cinit
   125  00071E                     __pcinit:
   126                           	opt stack 0
   127  00071E                     start_initialization:
   128                           	opt stack 0
   129  00071E                     __initialization:
   130                           	opt stack 0
   131                           
   132                           ; Clear objects allocated to COMRAM (38 bytes)
   133  00071E  EE00  F001         	lfsr	0,__pbssCOMRAM
   134  000722  0E26               	movlw	38
   135  000724                     clear_0:
   136  000724  6AEE               	clrf	postinc0,c
   137  000726  06E8               	decf	wreg,f,c
   138  000728  E1FD               	bnz	clear_0
   139  00072A                     end_of_initialization:
   140                           	opt stack 0
   141  00072A                     __end_of__initialization:
   142                           	opt stack 0
   143  00072A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  00072C  6EF8               	movwf	tblptru,c
   145  00072E  0100               	movlb	0
   146  000730  EF9C  F002         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           	psect	bssCOMRAM
   152  000001                     __pbssCOMRAM:
   153                           	opt stack 0
   154  000001                     _regImg:
   155                           	opt stack 0
   156  000001                     	ds	36
   157  000025                     _freq:
   158                           	opt stack 0
   159  000025                     	ds	2
   160                           tblptru	equ	0xFF8
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           	psect	cstackCOMRAM
   165  000027                     __pcstackCOMRAM:
   166                           	opt stack 0
   167  000027                     ??_IdleI2C:
   168  000027                     nextChan@up:
   169                           	opt stack 0
   170  000027                     OpenI2C@slew:
   171                           	opt stack 0
   172  000027                     butnEvent@butn:
   173                           	opt stack 0
   174  000027                     dly@d:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x0
   178  000027                     	ds	1
   179  000028                     OpenI2C@sync_mode:
   180                           	opt stack 0
   181  000028                     WriteI2C@data_out:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x1
   185  000028                     	ds	1
   186  000029                     ??_FMwrite:
   187  000029                     dly@i:
   188                           	opt stack 0
   189  000029                     FMread@data:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x2
   193  000029                     	ds	2
   194  00002B                     ??_FMread:
   195  00002B                     FMwrite@firstByt:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x4
   199  00002B                     	ds	1
   200  00002C                     FMwrite@secndByt:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x5
   204  00002C                     	ds	1
   205  00002D                     FMwrite@adr:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x6
   209  00002D                     	ds	2
   210  00002F                     FMread@regAddr:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x8
   214  00002F                     	ds	1
   215  000030                     FMread@firstByt:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x9
   219  000030                     	ds	1
   220  000031                     FMread@secndByt:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0xA
   224  000031                     	ds	1
   225  000032                     FMready@rdy:
   226                           	opt stack 0
   227  000032                     FMvers@vsn:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0xB
   231  000032                     	ds	2
   232  000034                     ??_FMready:
   233  000034                     
   234                           ; 1 bytes @ 0xD
   235  000034                     	ds	2
   236  000036                     FMready@sts:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0xF
   240  000036                     	ds	2
   241  000038                     FMinit@dat:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x11
   245  000038                     	ds	2
   246  00003A                     FMinit@ad:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x13
   250  00003A                     	ds	1
   251  00003B                     main@evt:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x14
   255  00003B                     	ds	1
   256  00003C                     main@btn:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x15
   260  00003C                     	ds	1
   261  00003D                     main@ui:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x16
   265  00003D                     	ds	2
   266                           tblptru	equ	0xFF8
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 470 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;  ui              2   22[COMRAM] unsigned int 
   280 ;;  btn             1   21[COMRAM] unsigned char 
   281 ;;  evt             1   20[COMRAM] unsigned char 
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   291 ;;      Params:         0       0       0       0
   292 ;;      Locals:         4       0       0       0
   293 ;;      Temps:          0       0       0       0
   294 ;;      Totals:         4       0       0       0
   295 ;;Total ram usage:        4 bytes
   296 ;; Hardware stack levels required when called:    5
   297 ;; This function calls:
   298 ;;		_FMinit
   299 ;;		_FMvers
   300 ;;		_Init
   301 ;;		_butnEvent
   302 ;;		_dly
   303 ;;		_errfm
   304 ;;		_nextChan
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311  000538                     __ptext0:
   312                           	opt stack 0
   313  000538                     _main:
   314                           	opt stack 26
   315                           
   316                           ;main.c: 472: unsigned char btn;
   317                           ;main.c: 473: unsigned char evt;
   318                           ;main.c: 474: unsigned int ui;
   319                           ;main.c: 476: dly(20);
   320                           
   321                           ;incstack = 0
   322  000538  0E00               	movlw	0
   323  00053A  6E28               	movwf	dly@d+1,c
   324  00053C  0E14               	movlw	20
   325  00053E  6E27               	movwf	dly@d,c
   326  000540  EC59  F003         	call	_dly	;wreg free
   327                           
   328                           ;main.c: 477: Init();
   329  000544  EC0B  F003         	call	_Init	;wreg free
   330                           
   331                           ;main.c: 478: FMvers(&ui);
   332  000548  0E3D               	movlw	low main@ui
   333  00054A  6E32               	movwf	FMvers@vsn,c
   334  00054C  0E00               	movlw	high main@ui
   335  00054E  6E33               	movwf	FMvers@vsn+1,c
   336  000550  ECA3  F003         	call	_FMvers	;wreg free
   337                           
   338                           ;main.c: 479: if (ui != 0x1010) errfm();
   339  000554  0E10               	movlw	16
   340  000556  183D               	xorwf	main@ui,w,c
   341  000558  E103               	bnz	u730
   342  00055A  0E10               	movlw	16
   343  00055C  183E               	xorwf	main@ui+1,w,c
   344  00055E  A4D8               	btfss	status,2,c
   345  000560                     u730:
   346  000560  ECAF  F003         	call	_errfm	;wreg free
   347                           
   348                           ;main.c: 480: if (FMinit() != 0) errfm();
   349  000564  ECF8  F001         	call	_FMinit	;wreg free
   350  000568  0900               	iorlw	0
   351  00056A  A4D8               	btfss	status,2,c
   352  00056C  ECAF  F003         	call	_errfm	;wreg free
   353  000570                     
   354                           ;main.c: 482: evt = butnEvent(&btn);
   355                           
   356                           ;main.c: 481: for (;;) {
   357  000570  0E3C               	movlw	low main@btn
   358  000572  6E27               	movwf	butnEvent@butn,c
   359  000574  0E00               	movlw	high main@btn
   360  000576  6E28               	movwf	butnEvent@butn+1,c
   361  000578  ECAD  F003         	call	_butnEvent	;wreg free
   362  00057C  6E3B               	movwf	main@evt,c
   363                           
   364                           ;main.c: 483: if (evt == 1) switch (btn) {
   365  00057E  043B               	decf	main@evt,w,c
   366  000580  B4D8               	btfsc	status,2,c
   367  000582  D00C               	goto	l174
   368  000584  D7F5               	goto	l171
   369  000586  0E01               	movlw	1
   370  000588  ECAB  F003         	call	_nextChan
   371  00058C  D7F1               	goto	l171
   372  00058E  0E00               	movlw	0
   373  000590  ECAB  F003         	call	_nextChan
   374                           
   375                           ;main.c: 486: case 0b00000100 : ; break;
   376  000594  D7ED               	goto	l171
   377  000596  ECAF  F003         	call	_errfm	;wreg free
   378                           
   379                           ;main.c: 489: }
   380                           
   381                           ;main.c: 488: default : break;
   382  00059A  D7EA               	goto	l171
   383  00059C                     l174:
   384  00059C  503C               	movf	main@btn,w,c
   385                           
   386                           ; Switch size 1, requested type "space"
   387                           ; Number of cases is 4, Range of values is 1 to 128
   388                           ; switch strategies available:
   389                           ; Name         Instructions Cycles
   390                           ; simple_byte           13     7 (average)
   391                           ;	Chosen strategy is simple_byte
   392  00059E  0A01               	xorlw	1	; case 1
   393  0005A0  B4D8               	btfsc	status,2,c
   394  0005A2  D7F1               	goto	l175
   395  0005A4  0A03               	xorlw	3	; case 2
   396  0005A6  B4D8               	btfsc	status,2,c
   397  0005A8  D7F2               	goto	l177
   398  0005AA  0A06               	xorlw	6	; case 4
   399  0005AC  B4D8               	btfsc	status,2,c
   400  0005AE  D7E0               	goto	l171
   401  0005B0  0A84               	xorlw	132	; case 128
   402  0005B2  B4D8               	btfsc	status,2,c
   403  0005B4  D7F0               	goto	l179
   404                           
   405                           ;main.c: 490: }
   406  0005B6  D7DC               	goto	l171
   407  0005B8                     __end_of_main:
   408                           	opt stack 0
   409                           tblptru	equ	0xFF8
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           status	equ	0xFD8
   413                           
   414 ;; *************** function _nextChan *****************
   415 ;; Defined at:
   416 ;;		line 420 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  up              1    wreg     unsigned char 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  up              1    0[COMRAM] unsigned char 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      unsigned char 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   430 ;;      Params:         0       0       0       0
   431 ;;      Locals:         1       0       0       0
   432 ;;      Temps:          0       0       0       0
   433 ;;      Totals:         1       0       0       0
   434 ;;Total ram usage:        1 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text1
   444  000756                     __ptext1:
   445                           	opt stack 0
   446  000756                     _nextChan:
   447                           	opt stack 30
   448                           
   449                           ;incstack = 0
   450                           ;nextChan@up stored from wreg
   451  000756  6E27               	movwf	nextChan@up,c
   452                           
   453                           ;	Return value of _nextChan is never used
   454                           
   455                           ;main.c: 428: }else return 1;
   456                           
   457                           ;main.c: 427: return 0;
   458                           ;	Return value of _nextChan is never used
   459                           
   460                           ;main.c: 425: }else if(!up){
   461                           
   462                           ;main.c: 424: return 0;
   463                           ;	Return value of _nextChan is never used
   464  000758  0012               	return	
   465  00075A                     __end_of_nextChan:
   466                           	opt stack 0
   467                           tblptru	equ	0xFF8
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           status	equ	0xFD8
   471                           
   472 ;; *************** function _errfm *****************
   473 ;; Defined at:
   474 ;;		line 444 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		None
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   488 ;;      Params:         0       0       0       0
   489 ;;      Locals:         0       0       0       0
   490 ;;      Temps:          0       0       0       0
   491 ;;      Totals:         0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text2
   502  00075E                     __ptext2:
   503                           	opt stack 0
   504  00075E                     _errfm:
   505                           	opt stack 30
   506                           
   507                           ;incstack = 0
   508                           ;main.c: 446: ;
   509                           ;main.c: 447: for(;;) ;
   510  00075E  D7FF               	goto	_errfm
   511  000760                     __end_of_errfm:
   512                           	opt stack 0
   513                           tblptru	equ	0xFF8
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           status	equ	0xFD8
   517                           
   518 ;; *************** function _butnEvent *****************
   519 ;; Defined at:
   520 ;;		line 85 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  butn            2    0[COMRAM] PTR unsigned char 
   523 ;;		 -> main@btn(1), 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      unsigned char 
   528 ;; Registers used:
   529 ;;		wreg
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   535 ;;      Params:         2       0       0       0
   536 ;;      Locals:         0       0       0       0
   537 ;;      Temps:          0       0       0       0
   538 ;;      Totals:         2       0       0       0
   539 ;;Total ram usage:        2 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text3
   549  00075A                     __ptext3:
   550                           	opt stack 0
   551  00075A                     _butnEvent:
   552                           	opt stack 30
   553                           
   554                           ;main.c: 87: ;
   555                           ;main.c: 88: return 0;
   556                           
   557                           ;incstack = 0
   558  00075A  0E00               	movlw	0
   559  00075C  0012               	return	
   560  00075E                     __end_of_butnEvent:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           postinc0	equ	0xFEE
   564                           wreg	equ	0xFE8
   565                           status	equ	0xFD8
   566                           
   567 ;; *************** function _Init *****************
   568 ;; Defined at:
   569 ;;		line 125 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  i               2    0        int 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   583 ;;      Params:         0       0       0       0
   584 ;;      Locals:         0       0       0       0
   585 ;;      Temps:          0       0       0       0
   586 ;;      Totals:         0       0       0       0
   587 ;;Total ram usage:        0 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    1
   590 ;; This function calls:
   591 ;;		_OpenI2C
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text4
   598  000616                     __ptext4:
   599                           	opt stack 0
   600  000616                     _Init:
   601                           	opt stack 29
   602                           
   603                           ;main.c: 127: int i;
   604                           ;main.c: 129: OSCCON = 0b01110010;
   605                           
   606                           ;incstack = 0
   607  000616  0E72               	movlw	114
   608  000618  6ED3               	movwf	4051,c	;volatile
   609                           
   610                           ;main.c: 130: LCDSE0 = 0b11111111;
   611  00061A  010F               	movlb	15	; () banked
   612  00061C  695A               	setf	90,b	;volatile
   613                           
   614                           ; BSR set to: 15
   615                           ;main.c: 131: LCDSE1 = 0b11111111;
   616  00061E  695B               	setf	91,b	;volatile
   617                           
   618                           ; BSR set to: 15
   619                           ;main.c: 132: LCDSE2 = 0b11111111;
   620  000620  695C               	setf	92,b	;volatile
   621                           
   622                           ;main.c: 133: LCDSE3 = 0b00000000;
   623  000622  0E00               	movlw	0
   624  000624  6F5D               	movwf	93,b	;volatile
   625                           
   626                           ;main.c: 134: LCDCON = 0b10001000;
   627  000626  0E88               	movlw	136
   628  000628  6F59               	movwf	89,b	;volatile
   629                           
   630                           ;main.c: 135: LCDPS = 0b00110110;
   631  00062A  0E36               	movlw	54
   632  00062C  6F58               	movwf	88,b	;volatile
   633                           
   634                           ;main.c: 136: ADCON1 = 0b00111111;
   635  00062E  0E3F               	movlw	63
   636  000630  6EC1               	movwf	4033,c	;volatile
   637                           
   638                           ;main.c: 137: TRISA = 0b00000011;
   639  000632  0E03               	movlw	3
   640  000634  6E92               	movwf	3986,c	;volatile
   641                           
   642                           ;main.c: 138: TRISB = 0b00100001;
   643  000636  0E21               	movlw	33
   644  000638  6E93               	movwf	3987,c	;volatile
   645                           
   646                           ;main.c: 139: TRISC = 0b00011000;
   647  00063A  0E18               	movlw	24
   648  00063C  6E94               	movwf	3988,c	;volatile
   649                           
   650                           ; BSR set to: 15
   651                           ;main.c: 140: TRISG = 0b11111111;
   652  00063E  6898               	setf	3992,c	;volatile
   653                           
   654                           ;main.c: 141: PORTA = 0;
   655  000640  0E00               	movlw	0
   656  000642  6E80               	movwf	3968,c	;volatile
   657                           
   658                           ;main.c: 142: PORTB = 0;
   659  000644  0E00               	movlw	0
   660  000646  6E81               	movwf	3969,c	;volatile
   661                           
   662                           ;main.c: 143: PORTC = 0;
   663  000648  0E00               	movlw	0
   664  00064A  6E82               	movwf	3970,c	;volatile
   665                           
   666                           ; BSR set to: 15
   667                           ;main.c: 144: INTCONbits.TMR0IF = 0;
   668  00064C  94F2               	bcf	intcon,2,c	;volatile
   669                           
   670                           ;main.c: 146: T0CON = 0b00001000;
   671  00064E  0E08               	movlw	8
   672  000650  6ED5               	movwf	4053,c	;volatile
   673                           
   674                           ;main.c: 147: TMR0H = 0;
   675  000652  0E00               	movlw	0
   676  000654  6ED7               	movwf	4055,c	;volatile
   677                           
   678                           ;main.c: 148: TMR0L = 0;
   679  000656  0E00               	movlw	0
   680  000658  6ED6               	movwf	4054,c	;volatile
   681                           
   682                           ; BSR set to: 15
   683                           ;main.c: 149: T0CONbits.TMR0ON = 1;
   684  00065A  8ED5               	bsf	4053,7,c	;volatile
   685                           
   686                           ; BSR set to: 15
   687                           ;main.c: 150: OpenI2C( 0b00001000, 0b10000000);
   688  00065C  0E80               	movlw	128
   689  00065E  6E27               	movwf	OpenI2C@slew,c
   690  000660  0E08               	movlw	8
   691  000662  EC72  F003         	call	_OpenI2C
   692                           
   693                           ;main.c: 151: SSPADD = 0x3F;
   694  000666  0E3F               	movlw	63
   695  000668  6EC8               	movwf	4040,c	;volatile
   696  00066A  0012               	return		;funcret
   697  00066C                     __end_of_Init:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           intcon	equ	0xFF2
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _OpenI2C *****************
   706 ;; Defined at:
   707 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_open.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  sync_mode       1    wreg     unsigned char 
   710 ;;  slew            1    0[COMRAM] unsigned char 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  sync_mode       1    1[COMRAM] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   722 ;;      Params:         1       0       0       0
   723 ;;      Locals:         1       0       0       0
   724 ;;      Temps:          0       0       0       0
   725 ;;      Totals:         2       0       0       0
   726 ;;Total ram usage:        2 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_Init
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text5
   736  0006E4                     __ptext5:
   737                           	opt stack 0
   738  0006E4                     _OpenI2C:
   739                           	opt stack 29
   740                           
   741                           ;incstack = 0
   742                           ;OpenI2C@sync_mode stored from wreg
   743  0006E4  6E28               	movwf	OpenI2C@sync_mode,c
   744  0006E6  0E3F               	movlw	63
   745  0006E8  16C7               	andwf	4039,f,c	;volatile
   746  0006EA  0E00               	movlw	0
   747  0006EC  6EC6               	movwf	4038,c	;volatile
   748  0006EE  0E00               	movlw	0
   749  0006F0  6EC5               	movwf	4037,c	;volatile
   750  0006F2  5028               	movf	OpenI2C@sync_mode,w,c
   751  0006F4  12C6               	iorwf	4038,f,c	;volatile
   752  0006F6  5027               	movf	OpenI2C@slew,w,c
   753  0006F8  12C7               	iorwf	4039,f,c	;volatile
   754  0006FA  8694               	bsf	3988,3,c	;volatile
   755  0006FC  8894               	bsf	3988,4,c	;volatile
   756  0006FE  8AC6               	bsf	4038,5,c	;volatile
   757  000700  0012               	return		;funcret
   758  000702                     __end_of_OpenI2C:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           intcon	equ	0xFF2
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function _FMvers *****************
   767 ;; Defined at:
   768 ;;		line 383 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  vsn             2   11[COMRAM] PTR unsigned int 
   771 ;;		 -> main@ui(2), 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      unsigned char 
   776 ;; Registers used:
   777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   783 ;;      Params:         2       0       0       0
   784 ;;      Locals:         0       0       0       0
   785 ;;      Temps:          0       0       0       0
   786 ;;      Totals:         2       0       0       0
   787 ;;Total ram usage:        2 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		_FMread
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text6
   798  000746                     __ptext6:
   799                           	opt stack 0
   800  000746                     _FMvers:
   801                           	opt stack 27
   802                           
   803                           ;main.c: 384: if (FMread(0x1C, vsn) != 0) return 1;
   804                           
   805                           ;incstack = 0
   806  000746  C032  F029         	movff	FMvers@vsn,FMread@data
   807  00074A  C033  F02A         	movff	FMvers@vsn+1,FMread@data+1
   808  00074E  0E1C               	movlw	28
   809  000750  EC93  F001         	call	_FMread
   810                           
   811                           ;	Return value of _FMvers is never used
   812  000754  0012               	return	
   813  000756                     __end_of_FMvers:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           intcon	equ	0xFF2
   817                           postinc0	equ	0xFEE
   818                           wreg	equ	0xFE8
   819                           status	equ	0xFD8
   820                           
   821 ;; *************** function _FMinit *****************
   822 ;; Defined at:
   823 ;;		line 310 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  dat             2   17[COMRAM] unsigned int 
   828 ;;  ad              1   19[COMRAM] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      unsigned char 
   831 ;; Registers used:
   832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   838 ;;      Params:         0       0       0       0
   839 ;;      Locals:         3       0       0       0
   840 ;;      Temps:          0       0       0       0
   841 ;;      Totals:         3       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    4
   845 ;; This function calls:
   846 ;;		_FMready
   847 ;;		_FMwrite
   848 ;;		_dly
   849 ;;		_showFreq
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text7
   856  0003F0                     __ptext7:
   857                           	opt stack 0
   858  0003F0                     _FMinit:
   859                           	opt stack 26
   860                           
   861                           ;main.c: 312: unsigned char ad;
   862                           ;main.c: 313: unsigned int dat;
   863                           ;main.c: 316: for(ad = 0; ad < 18; ad++) regImg[ad] = regDflt[ad];
   864                           
   865                           ;incstack = 0
   866  0003F0  0E00               	movlw	0
   867  0003F2  6E3A               	movwf	FMinit@ad,c
   868  0003F4                     l1314:
   869  0003F4  0E11               	movlw	17
   870  0003F6  643A               	cpfsgt	FMinit@ad,c
   871  0003F8  D001               	goto	l124
   872  0003FA  D018               	goto	u620
   873  0003FC                     l124:
   874  0003FC  503A               	movf	FMinit@ad,w,c
   875  0003FE  0D02               	mullw	2
   876  000400  0E01               	movlw	low _regDflt
   877  000402  24F3               	addwf	prodl,w,c
   878  000404  6EF6               	movwf	tblptrl,c
   879  000406  0E03               	movlw	high _regDflt
   880  000408  20F4               	addwfc	prodh,w,c
   881  00040A  6EF7               	movwf	tblptrh,c
   882  00040C                     	if	0	;There are less than 3 active tblptr bytes
   883  00040C                     	endif
   884  00040C  503A               	movf	FMinit@ad,w,c
   885  00040E  0D02               	mullw	2
   886  000410  0E01               	movlw	low _regImg
   887  000412  24F3               	addwf	prodl,w,c
   888  000414  6ED9               	movwf	fsr2l,c
   889  000416  0E00               	movlw	high _regImg
   890  000418  20F4               	addwfc	prodh,w,c
   891  00041A  6EDA               	movwf	fsr2h,c
   892  00041C  0009               	tblrd		*+
   893  00041E  CFF5 FFDE          	movff	tablat,postinc2
   894  000422  0008               	tblrd		*
   895  000424  CFF5 FFDD          	movff	tablat,postdec2
   896  000428  2A3A               	incf	FMinit@ad,f,c
   897  00042A  D7E4               	goto	l1314
   898  00042C                     u620:
   899                           
   900                           ;main.c: 318: dat = regImg[0];
   901  00042C  C001  F038         	movff	_regImg,FMinit@dat
   902  000430  C002  F039         	movff	_regImg+1,FMinit@dat+1
   903                           
   904                           ;main.c: 319: regImg[0] &= ~1;
   905  000434  9001               	bcf	_regImg,0,c
   906                           
   907                           ;main.c: 320: if (FMwrite(0) != 0) return 1;
   908  000436  0E00               	movlw	0
   909  000438  EC5B  F002         	call	_FMwrite
   910  00043C  0900               	iorlw	0
   911  00043E  B4D8               	btfsc	status,2,c
   912  000440  D002               	goto	l126
   913  000442  0E01               	movlw	1
   914  000444  0012               	return	
   915  000446                     l126:
   916                           
   917                           ;main.c: 321: for(ad = 1; ad < 18; ad++) {
   918  000446  0E01               	movlw	1
   919  000448  6E3A               	movwf	FMinit@ad,c
   920  00044A                     l1334:
   921  00044A  0E11               	movlw	17
   922  00044C  643A               	cpfsgt	FMinit@ad,c
   923  00044E  D001               	goto	l128
   924  000450  D00A               	goto	u660
   925  000452                     l128:
   926                           
   927                           ;main.c: 322: if (FMwrite(ad) != 0)return 1;
   928  000452  503A               	movf	FMinit@ad,w,c
   929  000454  EC5B  F002         	call	_FMwrite
   930  000458  0900               	iorlw	0
   931  00045A  B4D8               	btfsc	status,2,c
   932  00045C  D002               	goto	l130
   933  00045E  0E01               	movlw	1
   934  000460  0012               	return	
   935  000462                     l130:
   936  000462  2A3A               	incf	FMinit@ad,f,c
   937  000464  D7F2               	goto	l1334
   938  000466                     u660:
   939                           
   940                           ;main.c: 323: }
   941                           ;main.c: 325: regImg[0] = dat | 1;
   942  000466  0E01               	movlw	1
   943  000468  1038               	iorwf	FMinit@dat,w,c
   944  00046A  6E01               	movwf	_regImg,c
   945  00046C  5039               	movf	FMinit@dat+1,w,c
   946  00046E  6E02               	movwf	_regImg+1,c
   947                           
   948                           ;main.c: 326: if (FMwrite(0) != 0) return 1;
   949  000470  0E00               	movlw	0
   950  000472  EC5B  F002         	call	_FMwrite
   951  000476  0900               	iorlw	0
   952  000478  B4D8               	btfsc	status,2,c
   953  00047A  D002               	goto	l131
   954  00047C  0E01               	movlw	1
   955  00047E  0012               	return	
   956  000480                     l131:
   957                           
   958                           ;main.c: 327: dly(20);
   959  000480  0E00               	movlw	0
   960  000482  6E28               	movwf	dly@d+1,c
   961  000484  0E14               	movlw	20
   962  000486  6E27               	movwf	dly@d,c
   963  000488  EC59  F003         	call	_dly	;wreg free
   964                           
   965                           ;main.c: 328: while (FMready(&dat), !dat) dly(2);
   966  00048C  D006               	goto	l132
   967  00048E  0E00               	movlw	0
   968  000490  6E28               	movwf	dly@d+1,c
   969  000492  0E02               	movlw	2
   970  000494  6E27               	movwf	dly@d,c
   971  000496  EC59  F003         	call	_dly	;wreg free
   972  00049A                     l132:
   973  00049A  0E38               	movlw	low FMinit@dat
   974  00049C  6E32               	movwf	FMready@rdy,c
   975  00049E  0E00               	movlw	high FMinit@dat
   976  0004A0  6E33               	movwf	FMready@rdy+1,c
   977  0004A2  EC36  F003         	call	_FMready	;wreg free
   978  0004A6  5038               	movf	FMinit@dat,w,c
   979  0004A8  1039               	iorwf	FMinit@dat+1,w,c
   980  0004AA  B4D8               	btfsc	status,2,c
   981  0004AC  D7F0               	goto	l133
   982                           
   983                           ;main.c: 329: showFreq();
   984  0004AE  ECB0  F003         	call	_showFreq	;wreg free
   985                           
   986                           ;main.c: 330: return 0;
   987  0004B2  0E00               	movlw	0
   988  0004B4  0012               	return	
   989  0004B6                     __end_of_FMinit:
   990                           	opt stack 0
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           prodh	equ	0xFF4
   996                           prodl	equ	0xFF3
   997                           intcon	equ	0xFF2
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           postinc2	equ	0xFDE
  1001                           postdec2	equ	0xFDD
  1002                           fsr2h	equ	0xFDA
  1003                           fsr2l	equ	0xFD9
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _showFreq *****************
  1007 ;; Defined at:
  1008 ;;		line 460 in file "main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      unsigned char 
  1015 ;; Registers used:
  1016 ;;		None
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1022 ;;      Params:         0       0       0       0
  1023 ;;      Locals:         0       0       0       0
  1024 ;;      Temps:          0       0       0       0
  1025 ;;      Totals:         0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_FMinit
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text8
  1036  000760                     __ptext8:
  1037                           	opt stack 0
  1038  000760                     _showFreq:
  1039                           	opt stack 29
  1040                           
  1041                           ;main.c: 462: ;
  1042                           ;main.c: 463: return 0;
  1043                           ;	Return value of _showFreq is never used
  1044                           
  1045                           ;incstack = 0
  1046  000760  0012               	return		;funcret
  1047  000762                     __end_of_showFreq:
  1048                           	opt stack 0
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           intcon	equ	0xFF2
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postinc2	equ	0xFDE
  1059                           postdec2	equ	0xFDD
  1060                           fsr2h	equ	0xFDA
  1061                           fsr2l	equ	0xFD9
  1062                           status	equ	0xFD8
  1063                           
  1064 ;; *************** function _dly *****************
  1065 ;; Defined at:
  1066 ;;		line 94 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  d               2    0[COMRAM] int 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  i               2    2[COMRAM] int 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1080 ;;      Params:         2       0       0       0
  1081 ;;      Locals:         2       0       0       0
  1082 ;;      Temps:          0       0       0       0
  1083 ;;      Totals:         4       0       0       0
  1084 ;;Total ram usage:        4 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_FMinit
  1090 ;;		_main
  1091 ;;		_FMfrequenc
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text9
  1096  0006B2                     __ptext9:
  1097                           	opt stack 0
  1098  0006B2                     _dly:
  1099                           	opt stack 30
  1100                           
  1101                           ;main.c: 96: int i = 0;
  1102                           
  1103                           ;incstack = 0
  1104  0006B2  0E00               	movlw	0
  1105  0006B4  6E2A               	movwf	dly@i+1,c
  1106  0006B6  0E00               	movlw	0
  1107  0006B8  6E29               	movwf	dly@i,c
  1108                           
  1109                           ;main.c: 98: for ( ; d; --d)
  1110  0006BA  D00F               	goto	l68
  1111  0006BC                     
  1112                           ;main.c: 99: for (i = 100; i; --i) ;
  1113  0006BC  0E00               	movlw	0
  1114  0006BE  6E2A               	movwf	dly@i+1,c
  1115  0006C0  0E64               	movlw	100
  1116  0006C2  6E29               	movwf	dly@i,c
  1117  0006C4  D003               	goto	l70
  1118  0006C6  0629               	decf	dly@i,f,c
  1119  0006C8  A0D8               	btfss	status,0,c
  1120  0006CA  062A               	decf	dly@i+1,f,c
  1121  0006CC                     l70:
  1122  0006CC  5029               	movf	dly@i,w,c
  1123  0006CE  102A               	iorwf	dly@i+1,w,c
  1124  0006D0  A4D8               	btfss	status,2,c
  1125  0006D2  D7F9               	goto	l71
  1126  0006D4  0627               	decf	dly@d,f,c
  1127  0006D6  A0D8               	btfss	status,0,c
  1128  0006D8  0628               	decf	dly@d+1,f,c
  1129  0006DA                     l68:
  1130  0006DA  5027               	movf	dly@d,w,c
  1131  0006DC  1028               	iorwf	dly@d+1,w,c
  1132  0006DE  B4D8               	btfsc	status,2,c
  1133  0006E0  0012               	return	
  1134  0006E2  D7EC               	goto	l69
  1135  0006E4                     __end_of_dly:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           prodh	equ	0xFF4
  1142                           prodl	equ	0xFF3
  1143                           intcon	equ	0xFF2
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           postinc2	equ	0xFDE
  1147                           postdec2	equ	0xFDD
  1148                           fsr2h	equ	0xFDA
  1149                           fsr2l	equ	0xFD9
  1150                           status	equ	0xFD8
  1151                           
  1152 ;; *************** function _FMwrite *****************
  1153 ;; Defined at:
  1154 ;;		line 197 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  adr             1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  adr             1    6[COMRAM] unsigned char 
  1159 ;;  secndByt        1    5[COMRAM] unsigned char 
  1160 ;;  firstByt        1    4[COMRAM] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      unsigned char 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1170 ;;      Params:         0       0       0       0
  1171 ;;      Locals:         3       0       0       0
  1172 ;;      Temps:          2       0       0       0
  1173 ;;      Totals:         5       0       0       0
  1174 ;;Total ram usage:        5 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		_IdleI2C
  1179 ;;		_WriteI2C
  1180 ;; This function is called by:
  1181 ;;		_FMinit
  1182 ;;		_FMfrequenc
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text10
  1187  0004B6                     __ptext10:
  1188                           	opt stack 0
  1189  0004B6                     _FMwrite:
  1190                           	opt stack 27
  1191                           
  1192                           ;incstack = 0
  1193                           ;FMwrite@adr stored from wreg
  1194  0004B6  6E2D               	movwf	FMwrite@adr,c
  1195                           
  1196                           ;main.c: 199: unsigned char firstByt;
  1197                           ;main.c: 200: unsigned char secndByt;
  1198                           ;main.c: 202: firstByt = regImg[adr] >> 8;
  1199  0004B8  502D               	movf	FMwrite@adr,w,c
  1200  0004BA  0D02               	mullw	2
  1201  0004BC  0E01               	movlw	low _regImg
  1202  0004BE  24F3               	addwf	prodl,w,c
  1203  0004C0  6ED9               	movwf	fsr2l,c
  1204  0004C2  0E00               	movlw	high _regImg
  1205  0004C4  20F4               	addwfc	prodh,w,c
  1206  0004C6  6EDA               	movwf	fsr2h,c
  1207  0004C8  CFDE F029          	movff	postinc2,??_FMwrite
  1208  0004CC  CFDD F02A          	movff	postdec2,??_FMwrite+1
  1209  0004D0  C02A  F029         	movff	??_FMwrite+1,??_FMwrite
  1210  0004D4  6A2A               	clrf	??_FMwrite+1,c
  1211  0004D6  5029               	movf	??_FMwrite,w,c
  1212  0004D8  6E2B               	movwf	FMwrite@firstByt,c
  1213                           
  1214                           ;main.c: 203: secndByt = regImg[adr];
  1215  0004DA  502D               	movf	FMwrite@adr,w,c
  1216  0004DC  0D02               	mullw	2
  1217  0004DE  0E01               	movlw	low _regImg
  1218  0004E0  24F3               	addwf	prodl,w,c
  1219  0004E2  6ED9               	movwf	fsr2l,c
  1220  0004E4  0E00               	movlw	high _regImg
  1221  0004E6  20F4               	addwfc	prodh,w,c
  1222  0004E8  6EDA               	movwf	fsr2h,c
  1223  0004EA  50DF               	movf	indf2,w,c
  1224  0004EC  6E2C               	movwf	FMwrite@secndByt,c
  1225                           
  1226                           ;main.c: 205: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1227  0004EE  80C5               	bsf	4037,0,c	;volatile
  1228  0004F0  B0C5               	btfsc	4037,0,c	;volatile
  1229  0004F2  D7FE               	goto	l92
  1230                           
  1231                           ;main.c: 206: IdleI2C();
  1232  0004F4  EC9A  F003         	call	_IdleI2C	;wreg free
  1233                           
  1234                           ;main.c: 209: if (WriteI2C(0x20)) return 1;
  1235  0004F8  0E20               	movlw	32
  1236  0004FA  ECDC  F002         	call	_WriteI2C
  1237  0004FE  0900               	iorlw	0
  1238  000500  B4D8               	btfsc	status,2,c
  1239  000502  D002               	goto	l94
  1240  000504  0E01               	movlw	1
  1241  000506  0012               	return	
  1242  000508                     l94:
  1243                           
  1244                           ;main.c: 210: IdleI2C();
  1245  000508  EC9A  F003         	call	_IdleI2C	;wreg free
  1246                           
  1247                           ;main.c: 211: WriteI2C(adr);
  1248  00050C  502D               	movf	FMwrite@adr,w,c
  1249  00050E  ECDC  F002         	call	_WriteI2C
  1250                           
  1251                           ;main.c: 212: IdleI2C();
  1252  000512  EC9A  F003         	call	_IdleI2C	;wreg free
  1253                           
  1254                           ;main.c: 213: WriteI2C(firstByt);
  1255  000516  502B               	movf	FMwrite@firstByt,w,c
  1256  000518  ECDC  F002         	call	_WriteI2C
  1257                           
  1258                           ;main.c: 214: IdleI2C();
  1259  00051C  EC9A  F003         	call	_IdleI2C	;wreg free
  1260                           
  1261                           ;main.c: 215: WriteI2C(secndByt);
  1262  000520  502C               	movf	FMwrite@secndByt,w,c
  1263  000522  ECDC  F002         	call	_WriteI2C
  1264                           
  1265                           ;main.c: 216: IdleI2C();
  1266  000526  EC9A  F003         	call	_IdleI2C	;wreg free
  1267                           
  1268                           ;main.c: 217: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1269  00052A  84C5               	bsf	4037,2,c	;volatile
  1270  00052C  B4C5               	btfsc	4037,2,c	;volatile
  1271  00052E  D7FE               	goto	l97
  1272                           
  1273                           ;main.c: 218: IdleI2C();
  1274  000530  EC9A  F003         	call	_IdleI2C	;wreg free
  1275                           
  1276                           ;main.c: 219: return 0;
  1277  000534  0E00               	movlw	0
  1278  000536  0012               	return	
  1279  000538                     __end_of_FMwrite:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           prodh	equ	0xFF4
  1286                           prodl	equ	0xFF3
  1287                           intcon	equ	0xFF2
  1288                           postinc0	equ	0xFEE
  1289                           wreg	equ	0xFE8
  1290                           indf2	equ	0xFDF
  1291                           postinc2	equ	0xFDE
  1292                           postdec2	equ	0xFDD
  1293                           fsr2h	equ	0xFDA
  1294                           fsr2l	equ	0xFD9
  1295                           status	equ	0xFD8
  1296                           
  1297 ;; *************** function _FMready *****************
  1298 ;; Defined at:
  1299 ;;		line 289 in file "main.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  rdy             2   11[COMRAM] PTR unsigned int 
  1302 ;;		 -> FMfrequenc@dat(2), FMinit@dat(2), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  sts             2   15[COMRAM] unsigned int 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      unsigned char 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1314 ;;      Params:         2       0       0       0
  1315 ;;      Locals:         2       0       0       0
  1316 ;;      Temps:          2       0       0       0
  1317 ;;      Totals:         6       0       0       0
  1318 ;;Total ram usage:        6 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    3
  1321 ;; This function calls:
  1322 ;;		_FMread
  1323 ;; This function is called by:
  1324 ;;		_FMinit
  1325 ;;		_FMfrequenc
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text11
  1330  00066C                     __ptext11:
  1331                           	opt stack 0
  1332  00066C                     _FMready:
  1333                           	opt stack 26
  1334                           
  1335                           ;main.c: 291: unsigned int sts;
  1336                           ;main.c: 293: if (FMread(0x13, &sts) != 0) return 1;
  1337                           
  1338                           ;incstack = 0
  1339  00066C  0E36               	movlw	low FMready@sts
  1340  00066E  6E29               	movwf	FMread@data,c
  1341  000670  0E00               	movlw	high FMready@sts
  1342  000672  6E2A               	movwf	FMread@data+1,c
  1343  000674  0E13               	movlw	19
  1344  000676  EC93  F001         	call	_FMread
  1345  00067A  0900               	iorlw	0
  1346  00067C  B4D8               	btfsc	status,2,c
  1347  00067E  D002               	goto	l120
  1348  000680  0E01               	movlw	1
  1349  000682  0012               	return	
  1350  000684                     l120:
  1351                           
  1352                           ;main.c: 294: sts &= 0x0020;
  1353  000684  0E20               	movlw	32
  1354  000686  1636               	andwf	FMready@sts,f,c
  1355  000688  0E00               	movlw	0
  1356  00068A  1637               	andwf	FMready@sts+1,f,c
  1357                           
  1358                           ;main.c: 295: *rdy = sts ? 1 : 0;
  1359  00068C  5036               	movf	FMready@sts,w,c
  1360  00068E  1037               	iorwf	FMready@sts+1,w,c
  1361  000690  B4D8               	btfsc	status,2,c
  1362  000692  D002               	goto	u590
  1363  000694  0E01               	movlw	1
  1364  000696  D001               	goto	u600
  1365  000698                     u590:
  1366  000698  0E00               	movlw	0
  1367  00069A                     u600:
  1368  00069A  6E34               	movwf	??_FMready& (0+255),c
  1369  00069C  6A35               	clrf	(??_FMready+1)& (0+255),c
  1370  00069E  C032  FFD9         	movff	FMready@rdy,fsr2l
  1371  0006A2  C033  FFDA         	movff	FMready@rdy+1,fsr2h
  1372  0006A6  C034  FFDE         	movff	??_FMready,postinc2
  1373  0006AA  C035  FFDD         	movff	??_FMready+1,postdec2
  1374                           
  1375                           ;main.c: 296: return 0;
  1376  0006AE  0E00               	movlw	0
  1377  0006B0  0012               	return	
  1378  0006B2                     __end_of_FMready:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           prodh	equ	0xFF4
  1385                           prodl	equ	0xFF3
  1386                           intcon	equ	0xFF2
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           indf2	equ	0xFDF
  1390                           postinc2	equ	0xFDE
  1391                           postdec2	equ	0xFDD
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _FMread *****************
  1397 ;; Defined at:
  1398 ;;		line 239 in file "main.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  regAddr         1    wreg     unsigned char 
  1401 ;;  data            2    2[COMRAM] PTR unsigned int 
  1402 ;;		 -> main@ui(2), FMready@sts(2), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  regAddr         1    8[COMRAM] unsigned char 
  1405 ;;  secndByt        1   10[COMRAM] unsigned char 
  1406 ;;  firstByt        1    9[COMRAM] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      unsigned char 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1416 ;;      Params:         2       0       0       0
  1417 ;;      Locals:         3       0       0       0
  1418 ;;      Temps:          4       0       0       0
  1419 ;;      Totals:         9       0       0       0
  1420 ;;Total ram usage:        9 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    2
  1423 ;; This function calls:
  1424 ;;		_IdleI2C
  1425 ;;		_ReadI2C
  1426 ;;		_WriteI2C
  1427 ;; This function is called by:
  1428 ;;		_FMready
  1429 ;;		_FMvers
  1430 ;;		_FMid
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text12
  1435  000326                     __ptext12:
  1436                           	opt stack 0
  1437  000326                     _FMread:
  1438                           	opt stack 27
  1439                           
  1440                           ;incstack = 0
  1441                           ;FMread@regAddr stored from wreg
  1442  000326  6E2F               	movwf	FMread@regAddr,c
  1443                           
  1444                           ;main.c: 241: unsigned char firstByt;
  1445                           ;main.c: 242: unsigned char secndByt;
  1446                           ;main.c: 244: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1447  000328  80C5               	bsf	4037,0,c	;volatile
  1448  00032A  B0C5               	btfsc	4037,0,c	;volatile
  1449  00032C  D7FE               	goto	l102
  1450                           
  1451                           ;main.c: 245: IdleI2C();
  1452  00032E  EC9A  F003         	call	_IdleI2C	;wreg free
  1453                           
  1454                           ;main.c: 248: if (WriteI2C(0x20)) return 1;
  1455  000332  0E20               	movlw	32
  1456  000334  ECDC  F002         	call	_WriteI2C
  1457  000338  0900               	iorlw	0
  1458  00033A  B4D8               	btfsc	status,2,c
  1459  00033C  D002               	goto	l104
  1460  00033E  0E01               	movlw	1
  1461  000340  0012               	return	
  1462  000342                     l104:
  1463                           
  1464                           ;main.c: 249: IdleI2C();
  1465  000342  EC9A  F003         	call	_IdleI2C	;wreg free
  1466                           
  1467                           ;main.c: 250: WriteI2C(regAddr);
  1468  000346  502F               	movf	FMread@regAddr,w,c
  1469  000348  ECDC  F002         	call	_WriteI2C
  1470                           
  1471                           ;main.c: 251: IdleI2C();
  1472  00034C  EC9A  F003         	call	_IdleI2C	;wreg free
  1473                           
  1474                           ;main.c: 252: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  1475  000350  82C5               	bsf	4037,1,c	;volatile
  1476  000352  B2C5               	btfsc	4037,1,c	;volatile
  1477  000354  D7FE               	goto	l107
  1478                           
  1479                           ;main.c: 253: IdleI2C();
  1480  000356  EC9A  F003         	call	_IdleI2C	;wreg free
  1481                           
  1482                           ;main.c: 254: WriteI2C(0x20 + 0x01);
  1483  00035A  0E21               	movlw	33
  1484  00035C  ECDC  F002         	call	_WriteI2C
  1485                           
  1486                           ;main.c: 255: IdleI2C();
  1487  000360  EC9A  F003         	call	_IdleI2C	;wreg free
  1488                           
  1489                           ;main.c: 256: firstByt = ReadI2C();
  1490  000364  EC81  F003         	call	_ReadI2C	;wreg free
  1491  000368  6E30               	movwf	FMread@firstByt,c
  1492                           
  1493                           ;main.c: 257: IdleI2C();
  1494  00036A  EC9A  F003         	call	_IdleI2C	;wreg free
  1495                           
  1496                           ;main.c: 258: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1497  00036E  9AC5               	bcf	4037,5,c	;volatile
  1498  000370  88C5               	bsf	4037,4,c	;volatile
  1499  000372  B8C5               	btfsc	4037,4,c	;volatile
  1500  000374  D7FE               	goto	l110
  1501                           
  1502                           ;main.c: 259: IdleI2C();
  1503  000376  EC9A  F003         	call	_IdleI2C	;wreg free
  1504                           
  1505                           ;main.c: 260: secndByt = ReadI2C();
  1506  00037A  EC81  F003         	call	_ReadI2C	;wreg free
  1507  00037E  6E31               	movwf	FMread@secndByt,c
  1508                           
  1509                           ;main.c: 261: IdleI2C();
  1510  000380  EC9A  F003         	call	_IdleI2C	;wreg free
  1511                           
  1512                           ;main.c: 262: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1513  000384  8AC5               	bsf	4037,5,c	;volatile
  1514  000386  88C5               	bsf	4037,4,c	;volatile
  1515  000388  B8C5               	btfsc	4037,4,c	;volatile
  1516  00038A  D7FE               	goto	l113
  1517                           
  1518                           ;main.c: 263: IdleI2C();
  1519  00038C  EC9A  F003         	call	_IdleI2C	;wreg free
  1520                           
  1521                           ;main.c: 264: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1522  000390  84C5               	bsf	4037,2,c	;volatile
  1523  000392  B4C5               	btfsc	4037,2,c	;volatile
  1524  000394  D7FE               	goto	l116
  1525                           
  1526                           ;main.c: 265: IdleI2C();
  1527  000396  EC9A  F003         	call	_IdleI2C	;wreg free
  1528                           
  1529                           ;main.c: 266: *data = firstByt;
  1530  00039A  5030               	movf	FMread@firstByt,w,c
  1531  00039C  6E2B               	movwf	??_FMread& (0+255),c
  1532  00039E  6A2C               	clrf	(??_FMread+1)& (0+255),c
  1533  0003A0  C029  FFD9         	movff	FMread@data,fsr2l
  1534  0003A4  C02A  FFDA         	movff	FMread@data+1,fsr2h
  1535  0003A8  C02B  FFDE         	movff	??_FMread,postinc2
  1536  0003AC  C02C  FFDD         	movff	??_FMread+1,postdec2
  1537                           
  1538                           ;main.c: 267: *data <<= 8;
  1539  0003B0  C029  FFD9         	movff	FMread@data,fsr2l
  1540  0003B4  C02A  FFDA         	movff	FMread@data+1,fsr2h
  1541  0003B8  50DE               	movf	postinc2,w,c
  1542  0003BA  6EDD               	movwf	postdec2,c
  1543  0003BC  6ADF               	clrf	indf2,c
  1544                           
  1545                           ;main.c: 268: *data = *data | secndByt;
  1546  0003BE  C029  FFD9         	movff	FMread@data,fsr2l
  1547  0003C2  C02A  FFDA         	movff	FMread@data+1,fsr2h
  1548  0003C6  CFDE F02B          	movff	postinc2,??_FMread
  1549  0003CA  CFDD F02C          	movff	postdec2,??_FMread+1
  1550  0003CE  5031               	movf	FMread@secndByt,w,c
  1551  0003D0  6E2D               	movwf	(??_FMread+2)& (0+255),c
  1552  0003D2  6A2E               	clrf	(??_FMread+3)& (0+255),c
  1553  0003D4  502B               	movf	??_FMread,w,c
  1554  0003D6  122D               	iorwf	??_FMread+2,f,c
  1555  0003D8  502C               	movf	??_FMread+1,w,c
  1556  0003DA  122E               	iorwf	??_FMread+3,f,c
  1557  0003DC  C029  FFD9         	movff	FMread@data,fsr2l
  1558  0003E0  C02A  FFDA         	movff	FMread@data+1,fsr2h
  1559  0003E4  C02D  FFDE         	movff	??_FMread+2,postinc2
  1560  0003E8  C02E  FFDD         	movff	??_FMread+3,postdec2
  1561                           
  1562                           ;main.c: 270: return 0;
  1563  0003EC  0E00               	movlw	0
  1564  0003EE  0012               	return	
  1565  0003F0                     __end_of_FMread:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           prodh	equ	0xFF4
  1572                           prodl	equ	0xFF3
  1573                           intcon	equ	0xFF2
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           indf2	equ	0xFDF
  1577                           postinc2	equ	0xFDE
  1578                           postdec2	equ	0xFDD
  1579                           fsr2h	equ	0xFDA
  1580                           fsr2l	equ	0xFD9
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _WriteI2C *****************
  1584 ;; Defined at:
  1585 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_writ.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  data_out        1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  data_out        1    1[COMRAM] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      char 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1599 ;;      Params:         0       0       0       0
  1600 ;;      Locals:         1       0       0       0
  1601 ;;      Temps:          0       0       0       0
  1602 ;;      Totals:         1       0       0       0
  1603 ;;Total ram usage:        1 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    1
  1606 ;; This function calls:
  1607 ;;		_IdleI2C
  1608 ;; This function is called by:
  1609 ;;		_FMwrite
  1610 ;;		_FMread
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text13
  1615  0005B8                     __ptext13:
  1616                           	opt stack 0
  1617  0005B8                     _WriteI2C:
  1618                           	opt stack 27
  1619                           
  1620                           ;incstack = 0
  1621                           ;WriteI2C@data_out stored from wreg
  1622  0005B8  6E28               	movwf	WriteI2C@data_out,c
  1623  0005BA  C028  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1624  0005BE  AEC6               	btfss	4038,7,c	;volatile
  1625  0005C0  D002               	goto	l237
  1626  0005C2  0EFF               	movlw	255
  1627  0005C4  0012               	return	
  1628  0005C6                     l237:
  1629  0005C6  50C6               	movf	4038,w,c	;volatile
  1630  0005C8  0B0F               	andlw	15
  1631  0005CA  0A08               	xorlw	8
  1632  0005CC  B4D8               	btfsc	status,2,c
  1633  0005CE  D00F               	goto	l240
  1634  0005D0  50C6               	movf	4038,w,c	;volatile
  1635  0005D2  0B0F               	andlw	15
  1636  0005D4  0A0B               	xorlw	11
  1637  0005D6  B4D8               	btfsc	status,2,c
  1638  0005D8  D00A               	goto	l240
  1639  0005DA  88C6               	bsf	4038,4,c	;volatile
  1640  0005DC  A69E               	btfss	3998,3,c	;volatile
  1641  0005DE  D7FE               	goto	l242
  1642  0005E0  A4C7               	btfss	4039,2,c	;volatile
  1643  0005E2  B0C7               	btfsc	4039,0,c	;volatile
  1644  0005E4  D002               	goto	l244
  1645  0005E6  0EFE               	movlw	254
  1646  0005E8  0012               	return	
  1647  0005EA                     l244:
  1648  0005EA  0E00               	movlw	0
  1649  0005EC  0012               	return	
  1650  0005EE                     l240:
  1651  0005EE  50C6               	movf	4038,w,c	;volatile
  1652  0005F0  0B0F               	andlw	15
  1653  0005F2  0A08               	xorlw	8
  1654  0005F4  B4D8               	btfsc	status,2,c
  1655  0005F6  D005               	goto	u100
  1656  0005F8  50C6               	movf	4038,w,c	;volatile
  1657  0005FA  0B0F               	andlw	15
  1658  0005FC  0A0B               	xorlw	11
  1659  0005FE  A4D8               	btfss	status,2,c
  1660  000600  0012               	return	
  1661  000602                     u100:
  1662  000602  B0C7               	btfsc	4039,0,c	;volatile
  1663  000604  D7FE               	goto	u100
  1664  000606  EC9A  F003         	call	_IdleI2C	;wreg free
  1665  00060A  ACC5               	btfss	4037,6,c	;volatile
  1666  00060C  D002               	goto	l253
  1667  00060E  0EFE               	movlw	254
  1668  000610  0012               	return	
  1669  000612                     l253:
  1670  000612  0E00               	movlw	0
  1671  000614  0012               	return	
  1672  000616                     __end_of_WriteI2C:
  1673                           	opt stack 0
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           prodh	equ	0xFF4
  1679                           prodl	equ	0xFF3
  1680                           intcon	equ	0xFF2
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           postdec2	equ	0xFDD
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _IdleI2C *****************
  1691 ;; Defined at:
  1692 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_idle.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1706 ;;      Params:         0       0       0       0
  1707 ;;      Locals:         0       0       0       0
  1708 ;;      Temps:          1       0       0       0
  1709 ;;      Totals:         1       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_FMwrite
  1716 ;;		_FMread
  1717 ;;		_WriteI2C
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text14
  1722  000734                     __ptext14:
  1723                           	opt stack 0
  1724  000734                     _IdleI2C:
  1725                           	opt stack 27
  1726                           
  1727                           ;incstack = 0
  1728  000734  CFC5 F027          	movff	4037,??_IdleI2C	;volatile
  1729  000738  0E1F               	movlw	31
  1730  00073A  1627               	andwf	??_IdleI2C,f,c
  1731  00073C  A4D8               	btfss	status,2,c
  1732  00073E  D7FA               	goto	_IdleI2C
  1733  000740  A4C7               	btfss	4039,2,c	;volatile
  1734  000742  0012               	return	
  1735  000744  D7F7               	goto	_IdleI2C
  1736  000746                     __end_of_IdleI2C:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon	equ	0xFF2
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           indf2	equ	0xFDF
  1748                           postinc2	equ	0xFDE
  1749                           postdec2	equ	0xFDD
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _ReadI2C *****************
  1755 ;; Defined at:
  1756 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_read.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      unsigned char 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1770 ;;      Params:         0       0       0       0
  1771 ;;      Locals:         0       0       0       0
  1772 ;;      Temps:          0       0       0       0
  1773 ;;      Totals:         0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_FMread
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text15
  1784  000702                     __ptext15:
  1785                           	opt stack 0
  1786  000702                     _ReadI2C:
  1787                           	opt stack 28
  1788                           
  1789                           ;incstack = 0
  1790  000702  50C6               	movf	4038,w,c	;volatile
  1791  000704  0B0F               	andlw	15
  1792  000706  0A08               	xorlw	8
  1793  000708  B4D8               	btfsc	status,2,c
  1794  00070A  D004               	goto	u140
  1795  00070C  50C6               	movf	4038,w,c	;volatile
  1796  00070E  0B0F               	andlw	15
  1797  000710  0A0B               	xorlw	11
  1798  000712  B4D8               	btfsc	status,2,c
  1799  000714                     u140:
  1800  000714  86C5               	bsf	4037,3,c	;volatile
  1801  000716  A0C7               	btfss	4039,0,c	;volatile
  1802  000718  D7FE               	goto	l214
  1803  00071A  50C9               	movf	4041,w,c	;volatile
  1804  00071C  0012               	return	
  1805  00071E                     __end_of_ReadI2C:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           prodh	equ	0xFF4
  1812                           prodl	equ	0xFF3
  1813                           intcon	equ	0xFF2
  1814                           postinc0	equ	0xFEE
  1815                           wreg	equ	0xFE8
  1816                           indf2	equ	0xFDF
  1817                           postinc2	equ	0xFDE
  1818                           postdec2	equ	0xFDD
  1819                           fsr2h	equ	0xFDA
  1820                           fsr2l	equ	0xFD9
  1821                           status	equ	0xFD8
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           prodh	equ	0xFF4
  1827                           prodl	equ	0xFF3
  1828                           intcon	equ	0xFF2
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           indf2	equ	0xFDF
  1832                           postinc2	equ	0xFDE
  1833                           postdec2	equ	0xFDD
  1834                           fsr2h	equ	0xFDA
  1835                           fsr2l	equ	0xFD9
  1836                           status	equ	0xFD8
  1837                           
  1838                           	psect	rparam
  1839  0000                     tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           prodh	equ	0xFF4
  1844                           prodl	equ	0xFF3
  1845                           intcon	equ	0xFF2
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           indf2	equ	0xFDF
  1849                           postinc2	equ	0xFDE
  1850                           postdec2	equ	0xFDD
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      62
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    butnEvent@butn	PTR unsigned char  size(2) Largest target is 1
		 -> main@btn(COMRAM[1]), 

    FMvers@vsn	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), 

    FMready@rdy	PTR unsigned int  size(2) Largest target is 2
		 -> FMfrequenc@dat(COMRAM[2]), FMinit@dat(COMRAM[2]), 

    FMread@data	PTR unsigned int  size(2) Largest target is 2
		 -> main@ui(COMRAM[2]), FMready@sts(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FMinit
    _Init->_OpenI2C
    _FMvers->_FMread
    _FMinit->_FMready
    _FMwrite->_WriteI2C
    _FMready->_FMread
    _FMread->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2487
                                             20 COMRAM     4     4      0
                             _FMinit
                             _FMvers
                               _Init
                          _butnEvent
                                _dly
                              _errfm
                           _nextChan
 ---------------------------------------------------------------------------------
 (1) _nextChan                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _errfm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _butnEvent                                            2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0     120
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _FMvers                                               2     0      2     497
                                             11 COMRAM     2     0      2
                             _FMread
 ---------------------------------------------------------------------------------
 (1) _FMinit                                               3     3      0    1294
                                             17 COMRAM     3     3      0
                            _FMready
                            _FMwrite
                                _dly
                           _showFreq
 ---------------------------------------------------------------------------------
 (2) _showFreq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dly                                                  4     2      2     352
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _FMwrite                                              5     5      0      90
                                              2 COMRAM     5     5      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _FMready                                              6     4      2     625
                                             11 COMRAM     6     4      2
                             _FMread
 ---------------------------------------------------------------------------------
 (2) _FMread                                               9     7      2     399
                                              2 COMRAM     9     7      2
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FMinit
     _FMready
       _FMread
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _FMwrite
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _dly
     _showFreq
   _FMvers
     _FMread
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   _Init
     _OpenI2C
   _butnEvent
   _dly
   _errfm
   _nextChan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      3E       1       65.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E       8        0.0%
DATA                 0      0      3E      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 13 14:05:49 2018

            __CFG_CP$OFF 000000              _SSPSTATbits 000FC7                       l70 06CC  
                     l71 06C6                       l92 04F0                       l68 06DA  
                     l69 06BC                       l94 0508                       l97 052C  
            __CFG_BORV$3 000000                      l110 0372                      l102 032A  
                    l104 0342                      l120 0684                      l113 0388  
                    l130 0462                      l107 0352                      l131 0480  
                    l116 0392                      l132 049A                      l124 03FC  
                    l133 048E                      l214 0716                      l126 0446  
                    l240 05EE                      l128 0452                      l242 05DC  
                    l171 0570                      l244 05EA                      l253 0612  
                    l237 05C6                      l174 059C                      l175 0586  
                    l177 058E                      l179 0596                      u100 0602  
                    u140 0714                      u600 069A                      u620 042C  
                    u730 0560                      u660 0466                      u590 0698  
                    _dly 06B2                      prod 000FF3                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     l1314 03F4                     l1334 044A  
                   ?_dly 0027                     _Init 0616          __end_of_FMready 06B2  
                   _main 0538                     _freq 0025                     dly@d 0027  
                   dly@i 0029                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9          __end_of_FMwrite 0538                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
        __end_of_IdleI2C 0746            __CFG_MCLRE$ON 000000             ___param_bank 000000  
        __end_of_ReadI2C 071E          __end_of_OpenI2C 0702                    ??_dly 0029  
                  ?_Init 0027                    ?_main 0027                    _T0CON 000FD5  
                  _LCDPS 000F58                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISG 000F98            __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000  
        __end_of_regDflt 0325                    _errfm 075E           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 071E  
           __end_of_Init 066C             __end_of_main 05B8                   ??_Init 0029  
                 ??_main 003B            __activetblptr 000002                   _ADCON1 000FC1  
              ??_FMready 0034                   ?_errfm 0027         __end_of_WriteI2C 0616  
              ??_FMwrite 0029                   _LCDCON 000F59                   _LCDSE0 000F5A  
                 _LCDSE1 000F5B                   _LCDSE2 000F5C                   _LCDSE3 000F5D  
            OpenI2C@slew 0027                ??_IdleI2C 0027                   _OSCCON 000FD3  
                 _FMinit 03F0                   _FMread 0326                   _SSPADD 000FC8  
                 _SSPBUF 000FC9                   _FMvers 0746                ??_ReadI2C 0027  
              ??_OpenI2C 0028           __CFG_XINST$OFF 000000                   _regImg 0001  
                 clear_0 0724         __end_of_nextChan 075A                   main@ui 003D  
       __end_of_showFreq 0762             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 072A            ___rparam_used 000001           __pcstackCOMRAM 0027  
          __end_of_errfm 0760          __CFG_OSC$INTIO7 000000                  ??_errfm 0027  
     __size_of_butnEvent 0004                  ?_FMinit 0027                  ?_FMread 0029  
                ?_FMvers 0032                ?_WriteI2C 0027                FMinit@dat 0038  
                _FMready 066C                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7                  _FMwrite 04B6                  _IdleI2C 0734  
        __size_of_FMinit 00C6          __size_of_FMread 00CA                FMvers@vsn 0032  
                _ReadI2C 0702          __size_of_FMvers 0010                ?_nextChan 0027  
                _OpenI2C 06E4                  __Hparam 0000                  __Lparam 0000  
              ?_showFreq 0027             __psmallconst 0300          __CFG_STVREN$OFF 000000  
                __pcinit 071E               ??_WriteI2C 0028        __end_of_butnEvent 075E  
                __ramtop 0300                  __ptext0 0538                  __ptext1 0756  
                __ptext2 075E                  __ptext3 075A                  __ptext4 0616  
                __ptext5 06E4                  __ptext6 0746                  __ptext7 03F0  
                __ptext8 0760                  __ptext9 06B2                _T0CONbits 000FD5  
                _regDflt 0301             __size_of_dly 0032                  main@btn 003C  
                main@evt 003B     end_of_initialization 072A            __Lmediumconst 0000  
             ??_nextChan 0027               ??_showFreq 0027                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISCbits 000F94  
          butnEvent@butn 0027           __end_of_FMinit 04B6           __end_of_FMread 03F0  
         __end_of_FMvers 0756      start_initialization 071E              __end_of_dly 06E4  
       WriteI2C@data_out 0028                 ??_FMinit 0038                 ??_FMread 002B  
               ??_FMvers 0034        __size_of_WriteI2C 005E              __pbssCOMRAM 0001  
               ?_FMready 0032                 ?_FMwrite 0027               nextChan@up 0027  
               ?_IdleI2C 0027                 ?_ReadI2C 0027                 ?_OpenI2C 0027  
      __size_of_nextChan 0004        __size_of_showFreq 0002                 FMinit@ad 003A  
            __smallconst 0300                _butnEvent 075A          FMwrite@firstByt 002B  
               _LCDDATA0 000F60          FMwrite@secndByt 002C           __size_of_errfm 0002  
         FMread@firstByt 0030               FMread@data 0029                 _PIR1bits 000F9E  
         FMread@secndByt 0031               FMready@rdy 0032               FMready@sts 0036  
             ?_butnEvent 0027         __size_of_FMready 0046         __size_of_FMwrite 0082  
       OpenI2C@sync_mode 0028         __size_of_IdleI2C 0012         __size_of_ReadI2C 001C  
               __Hrparam 0000         __size_of_OpenI2C 001E                 __Lrparam 0000  
             FMwrite@adr 002D                 _WriteI2C 05B8                 __ptext10 04B6  
               __ptext11 066C                 __ptext12 0326                 __ptext13 05B8  
               __ptext14 0734                 __ptext15 0702            __size_of_Init 0056  
          __size_of_main 0080                 _nextChan 0756            FMread@regAddr 002F  
               _showFreq 0760              ??_butnEvent 0029               _INTCONbits 000FF2  
            _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
